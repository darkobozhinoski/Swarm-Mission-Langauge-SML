/*
 * generated by Xtext 2.10.0
 */
grammar InternalMissionSpecification;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package be.uantwerpen.ansymo.missionspecification.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package be.uantwerpen.ansymo.missionspecification.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import be.uantwerpen.ansymo.missionspecification.services.MissionSpecificationGrammarAccess;

}
@parser::members {
	private MissionSpecificationGrammarAccess grammarAccess;

	public void setGrammarAccess(MissionSpecificationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMissionSpecification
entryRuleMissionSpecification
:
{ before(grammarAccess.getMissionSpecificationRule()); }
	 ruleMissionSpecification
{ after(grammarAccess.getMissionSpecificationRule()); } 
	 EOF 
;

// Rule MissionSpecification
ruleMissionSpecification 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getMissionSpecificationAccess().getPropertiesAssignment()); }
			(rule__MissionSpecification__PropertiesAssignment)
			{ after(grammarAccess.getMissionSpecificationAccess().getPropertiesAssignment()); }
		)
		(
			{ before(grammarAccess.getMissionSpecificationAccess().getPropertiesAssignment()); }
			(rule__MissionSpecification__PropertiesAssignment)*
			{ after(grammarAccess.getMissionSpecificationAccess().getPropertiesAssignment()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProperty
entryRuleProperty
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropertyAccess().getGroup()); }
		(rule__Property__Group__0)
		{ after(grammarAccess.getPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleScope
entryRuleScope
:
{ before(grammarAccess.getScopeRule()); }
	 ruleScope
{ after(grammarAccess.getScopeRule()); } 
	 EOF 
;

// Rule Scope
ruleScope 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getScopeAccess().getAlternatives()); }
		(rule__Scope__Alternatives)
		{ after(grammarAccess.getScopeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePattern
entryRulePattern
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternAccess().getAlternatives()); }
		(rule__Pattern__Alternatives)
		{ after(grammarAccess.getPatternAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOccurence
entryRuleOccurence
:
{ before(grammarAccess.getOccurenceRule()); }
	 ruleOccurence
{ after(grammarAccess.getOccurenceRule()); } 
	 EOF 
;

// Rule Occurence
ruleOccurence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOccurenceAccess().getAlternatives()); }
		(rule__Occurence__Alternatives)
		{ after(grammarAccess.getOccurenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUniversality
entryRuleUniversality
:
{ before(grammarAccess.getUniversalityRule()); }
	 ruleUniversality
{ after(grammarAccess.getUniversalityRule()); } 
	 EOF 
;

// Rule Universality
ruleUniversality 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUniversalityAccess().getGroup()); }
		(rule__Universality__Group__0)
		{ after(grammarAccess.getUniversalityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAbsence
entryRuleAbsence
:
{ before(grammarAccess.getAbsenceRule()); }
	 ruleAbsence
{ after(grammarAccess.getAbsenceRule()); } 
	 EOF 
;

// Rule Absence
ruleAbsence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAbsenceAccess().getGroup()); }
		(rule__Absence__Group__0)
		{ after(grammarAccess.getAbsenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExistence
entryRuleExistence
:
{ before(grammarAccess.getExistenceRule()); }
	 ruleExistence
{ after(grammarAccess.getExistenceRule()); } 
	 EOF 
;

// Rule Existence
ruleExistence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExistenceAccess().getGroup()); }
		(rule__Existence__Group__0)
		{ after(grammarAccess.getExistenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoundedExistence
entryRuleBoundedExistence
:
{ before(grammarAccess.getBoundedExistenceRule()); }
	 ruleBoundedExistence
{ after(grammarAccess.getBoundedExistenceRule()); } 
	 EOF 
;

// Rule BoundedExistence
ruleBoundedExistence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoundedExistenceAccess().getGroup()); }
		(rule__BoundedExistence__Group__0)
		{ after(grammarAccess.getBoundedExistenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrder
entryRuleOrder
:
{ before(grammarAccess.getOrderRule()); }
	 ruleOrder
{ after(grammarAccess.getOrderRule()); } 
	 EOF 
;

// Rule Order
ruleOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderAccess().getAlternatives()); }
		(rule__Order__Alternatives)
		{ after(grammarAccess.getOrderAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrecedence
entryRulePrecedence
:
{ before(grammarAccess.getPrecedenceRule()); }
	 rulePrecedence
{ after(grammarAccess.getPrecedenceRule()); } 
	 EOF 
;

// Rule Precedence
rulePrecedence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrecedenceAccess().getGroup()); }
		(rule__Precedence__Group__0)
		{ after(grammarAccess.getPrecedenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleResponse
entryRuleResponse
:
{ before(grammarAccess.getResponseRule()); }
	 ruleResponse
{ after(grammarAccess.getResponseRule()); } 
	 EOF 
;

// Rule Response
ruleResponse 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getResponseAccess().getGroup()); }
		(rule__Response__Group__0)
		{ after(grammarAccess.getResponseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProposition
entryRuleProposition
:
{ before(grammarAccess.getPropositionRule()); }
	 ruleProposition
{ after(grammarAccess.getPropositionRule()); } 
	 EOF 
;

// Rule Proposition
ruleProposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPropositionAccess().getAlternatives()); }
		(rule__Proposition__Alternatives)
		{ after(grammarAccess.getPropositionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAtomicProposition
entryRuleAtomicProposition
:
{ before(grammarAccess.getAtomicPropositionRule()); }
	 ruleAtomicProposition
{ after(grammarAccess.getAtomicPropositionRule()); } 
	 EOF 
;

// Rule AtomicProposition
ruleAtomicProposition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAtomicPropositionAccess().getGroup()); }
		(rule__AtomicProposition__Group__0)
		{ after(grammarAccess.getAtomicPropositionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getAlternatives()); }
		(rule__BooleanExpression__Alternatives)
		{ after(grammarAccess.getBooleanExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression
:
{ before(grammarAccess.getBinaryExpressionRule()); }
	 ruleBinaryExpression
{ after(grammarAccess.getBinaryExpressionRule()); } 
	 EOF 
;

// Rule BinaryExpression
ruleBinaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getAlternatives()); }
		(rule__BinaryExpression__Alternatives)
		{ after(grammarAccess.getBinaryExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression
:
{ before(grammarAccess.getUnaryExpressionRule()); }
	 ruleUnaryExpression
{ after(grammarAccess.getUnaryExpressionRule()); } 
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getGroup()); }
		(rule__UnaryExpression__Group__0)
		{ after(grammarAccess.getUnaryExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstance
entryRuleInstance
:
{ before(grammarAccess.getInstanceRule()); }
	 ruleInstance
{ after(grammarAccess.getInstanceRule()); } 
	 EOF 
;

// Rule Instance
ruleInstance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceAccess().getAlternatives()); }
		(rule__Instance__Alternatives)
		{ after(grammarAccess.getInstanceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceDecl
entryRuleInstanceDecl
:
{ before(grammarAccess.getInstanceDeclRule()); }
	 ruleInstanceDecl
{ after(grammarAccess.getInstanceDeclRule()); } 
	 EOF 
;

// Rule InstanceDecl
ruleInstanceDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceDeclAccess().getGroup()); }
		(rule__InstanceDecl__Group__0)
		{ after(grammarAccess.getInstanceDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstanceRef
entryRuleInstanceRef
:
{ before(grammarAccess.getInstanceRefRule()); }
	 ruleInstanceRef
{ after(grammarAccess.getInstanceRefRule()); } 
	 EOF 
;

// Rule InstanceRef
ruleInstanceRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstanceRefAccess().getRefAssignment()); }
		(rule__InstanceRef__RefAssignment)
		{ after(grammarAccess.getInstanceRefAccess().getRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssociation
entryRuleAssociation
:
{ before(grammarAccess.getAssociationRule()); }
	 ruleAssociation
{ after(grammarAccess.getAssociationRule()); } 
	 EOF 
;

// Rule Association
ruleAssociation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssociationAccess().getAlternatives()); }
		(rule__Association__Alternatives)
		{ after(grammarAccess.getAssociationAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getNameAssignment()); }
		(rule__Type__NameAssignment)
		{ after(grammarAccess.getTypeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribute
entryRuleAttribute
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeAccess().getNameAssignment()); }
		(rule__Attribute__NameAssignment)
		{ after(grammarAccess.getAttributeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
		(rule__IntLiteral__ValueAssignment)
		{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral
:
{ before(grammarAccess.getRealLiteralRule()); }
	 ruleRealLiteral
{ after(grammarAccess.getRealLiteralRule()); } 
	 EOF 
;

// Rule RealLiteral
ruleRealLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValueAssignment()); }
		(rule__RealLiteral__ValueAssignment)
		{ after(grammarAccess.getRealLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral
:
{ before(grammarAccess.getStringLiteralRule()); }
	 ruleStringLiteral
{ after(grammarAccess.getStringLiteralRule()); } 
	 EOF 
;

// Rule StringLiteral
ruleStringLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
		(rule__StringLiteral__ValueAssignment)
		{ after(grammarAccess.getStringLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral
:
{ before(grammarAccess.getBoolLiteralRule()); }
	 ruleBoolLiteral
{ after(grammarAccess.getBoolLiteralRule()); } 
	 EOF 
;

// Rule BoolLiteral
ruleBoolLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getValueAssignment()); }
		(rule__BoolLiteral__ValueAssignment)
		{ after(grammarAccess.getBoolLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignedInt
entryRuleSignedInt
:
{ before(grammarAccess.getSignedIntRule()); }
	 ruleSignedInt
{ after(grammarAccess.getSignedIntRule()); } 
	 EOF 
;

// Rule SignedInt
ruleSignedInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignedIntAccess().getGroup()); }
		(rule__SignedInt__Group__0)
		{ after(grammarAccess.getSignedIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSignedReal
entryRuleSignedReal
:
{ before(grammarAccess.getSignedRealRule()); }
	 ruleSignedReal
{ after(grammarAccess.getSignedRealRule()); } 
	 EOF 
;

// Rule SignedReal
ruleSignedReal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSignedRealAccess().getGroup()); }
		(rule__SignedReal__Group__0)
		{ after(grammarAccess.getSignedRealAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getGroup_0()); }
		(rule__Scope__Group_0__0)
		{ after(grammarAccess.getScopeAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getGroup_1()); }
		(rule__Scope__Group_1__0)
		{ after(grammarAccess.getScopeAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getGroup_2()); }
		(rule__Scope__Group_2__0)
		{ after(grammarAccess.getScopeAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getGroup_3()); }
		(rule__Scope__Group_3__0)
		{ after(grammarAccess.getScopeAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getScopeAccess().getGroup_4()); }
		(rule__Scope__Group_4__0)
		{ after(grammarAccess.getScopeAccess().getGroup_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternAccess().getOccurenceParserRuleCall_0()); }
		ruleOccurence
		{ after(grammarAccess.getPatternAccess().getOccurenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPatternAccess().getOrderParserRuleCall_1()); }
		ruleOrder
		{ after(grammarAccess.getPatternAccess().getOrderParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurence__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOccurenceAccess().getUniversalityParserRuleCall_0()); }
		ruleUniversality
		{ after(grammarAccess.getOccurenceAccess().getUniversalityParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOccurenceAccess().getAbsenceParserRuleCall_1()); }
		ruleAbsence
		{ after(grammarAccess.getOccurenceAccess().getAbsenceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getOccurenceAccess().getExistenceParserRuleCall_2()); }
		ruleExistence
		{ after(grammarAccess.getOccurenceAccess().getExistenceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getOccurenceAccess().getBoundedExistenceParserRuleCall_3()); }
		ruleBoundedExistence
		{ after(grammarAccess.getOccurenceAccess().getBoundedExistenceParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getPrecedenceParserRuleCall_0()); }
		rulePrecedence
		{ after(grammarAccess.getOrderAccess().getPrecedenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getOrderAccess().getResponseParserRuleCall_1()); }
		ruleResponse
		{ after(grammarAccess.getOrderAccess().getResponseParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropositionAccess().getGroup_0()); }
		(rule__Proposition__Group_0__0)
		{ after(grammarAccess.getPropositionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getPropositionAccess().getGroup_1()); }
		(rule__Proposition__Group_1__0)
		{ after(grammarAccess.getPropositionAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getBinaryExpressionParserRuleCall_0()); }
		ruleBinaryExpression
		{ after(grammarAccess.getBooleanExpressionAccess().getBinaryExpressionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getUnaryExpressionParserRuleCall_1()); }
		ruleUnaryExpression
		{ after(grammarAccess.getBooleanExpressionAccess().getUnaryExpressionParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getGroup_2()); }
		(rule__BooleanExpression__Group_2__0)
		{ after(grammarAccess.getBooleanExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getGroup_0()); }
		(rule__BinaryExpression__Group_0__0)
		{ after(grammarAccess.getBinaryExpressionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getGroup_1()); }
		(rule__BinaryExpression__Group_1__0)
		{ after(grammarAccess.getBinaryExpressionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getGroup_2()); }
		(rule__BinaryExpression__Group_2__0)
		{ after(grammarAccess.getBinaryExpressionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceAccess().getInstanceRefParserRuleCall_0()); }
		ruleInstanceRef
		{ after(grammarAccess.getInstanceAccess().getInstanceRefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstanceAccess().getInstanceDeclParserRuleCall_1()); }
		ruleInstanceDecl
		{ after(grammarAccess.getInstanceAccess().getInstanceDeclParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDecl__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceDeclAccess().getAKeyword_0_0()); }
		'a'
		{ after(grammarAccess.getInstanceDeclAccess().getAKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstanceDeclAccess().getAnKeyword_0_1()); }
		'an'
		{ after(grammarAccess.getInstanceDeclAccess().getAnKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_0()); }
		(rule__Association__Group_0__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_1()); }
		(rule__Association__Group_1__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_2()); }
		(rule__Association__Group_2__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_2()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_3()); }
		(rule__Association__Group_3__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_3()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_4()); }
		(rule__Association__Group_4__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_4()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_5()); }
		(rule__Association__Group_5__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_5()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_6()); }
		(rule__Association__Group_6__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_7()); }
		(rule__Association__Group_7__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_7()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_8()); }
		(rule__Association__Group_8__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_8()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_9()); }
		(rule__Association__Group_9__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_9()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_10()); }
		(rule__Association__Group_10__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_10()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_11()); }
		(rule__Association__Group_11__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_11()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_12()); }
		(rule__Association__Group_12__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_12()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_13()); }
		(rule__Association__Group_13__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_13()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_14()); }
		(rule__Association__Group_14__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_14()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_15()); }
		(rule__Association__Group_15__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_15()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_16()); }
		(rule__Association__Group_16__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_16()); }
	)
	|
	(
		{ before(grammarAccess.getAssociationAccess().getGroup_17()); }
		(rule__Association__Group_17__0)
		{ after(grammarAccess.getAssociationAccess().getGroup_17()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
		ruleIntLiteral
		{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_1()); }
		ruleRealLiteral
		{ after(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
		ruleStringLiteral
		{ after(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_3()); }
		ruleBoolLiteral
		{ after(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getValueTrueKeyword_0_0()); }
		'true'
		{ after(grammarAccess.getBoolLiteralAccess().getValueTrueKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolLiteralAccess().getValueFalseKeyword_0_1()); }
		'false'
		{ after(grammarAccess.getBoolLiteralAccess().getValueFalseKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__0__Impl
	rule__Property__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getScopeAssignment_0()); }
	(rule__Property__ScopeAssignment_0)
	{ after(grammarAccess.getPropertyAccess().getScopeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__1__Impl
	rule__Property__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getCommaKeyword_1()); }
	','
	{ after(grammarAccess.getPropertyAccess().getCommaKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__2__Impl
	rule__Property__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getPatternAssignment_2()); }
	(rule__Property__PatternAssignment_2)
	{ after(grammarAccess.getPropertyAccess().getPatternAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Property__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropertyAccess().getFullStopKeyword_3()); }
	('.')?
	{ after(grammarAccess.getPropertyAccess().getFullStopKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_0__0__Impl
	rule__Scope__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getGlobalScopeAction_0_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getGlobalScopeAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getGloballyKeyword_0_1()); }
	'Globally'
	{ after(grammarAccess.getScopeAccess().getGloballyKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_1__0__Impl
	rule__Scope__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getBeforeScopeAction_1_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getBeforeScopeAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_1__1__Impl
	rule__Scope__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getBeforeKeyword_1_1()); }
	'Before'
	{ after(grammarAccess.getScopeAccess().getBeforeKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getRAssignment_1_2()); }
	(rule__Scope__RAssignment_1_2)
	{ after(grammarAccess.getScopeAccess().getRAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_2__0__Impl
	rule__Scope__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAfterScopeAction_2_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getAfterScopeAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_2__1__Impl
	rule__Scope__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAfterKeyword_2_1()); }
	'After'
	{ after(grammarAccess.getScopeAccess().getAfterKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getQAssignment_2_2()); }
	(rule__Scope__QAssignment_2_2)
	{ after(grammarAccess.getScopeAccess().getQAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__0__Impl
	rule__Scope__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getBetweenScopeAction_3_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getBetweenScopeAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__1__Impl
	rule__Scope__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getBetweenKeyword_3_1()); }
	'Between'
	{ after(grammarAccess.getScopeAccess().getBetweenKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__2__Impl
	rule__Scope__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getQAssignment_3_2()); }
	(rule__Scope__QAssignment_3_2)
	{ after(grammarAccess.getScopeAccess().getQAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__3__Impl
	rule__Scope__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getCommaKeyword_3_3()); }
	','
	{ after(grammarAccess.getScopeAccess().getCommaKeyword_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__4__Impl
	rule__Scope__Group_3__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAndKeyword_3_4()); }
	'and'
	{ after(grammarAccess.getScopeAccess().getAndKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_3__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_3__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getRAssignment_3_5()); }
	(rule__Scope__RAssignment_3_5)
	{ after(grammarAccess.getScopeAccess().getRAssignment_3_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Scope__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__0__Impl
	rule__Scope__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAfterUntilScopeAction_4_0()); }
	()
	{ after(grammarAccess.getScopeAccess().getAfterUntilScopeAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__1__Impl
	rule__Scope__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getAfterKeyword_4_1()); }
	'After'
	{ after(grammarAccess.getScopeAccess().getAfterKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__2__Impl
	rule__Scope__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getQAssignment_4_2()); }
	(rule__Scope__QAssignment_4_2)
	{ after(grammarAccess.getScopeAccess().getQAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__3__Impl
	rule__Scope__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getCommaKeyword_4_3()); }
	','
	{ after(grammarAccess.getScopeAccess().getCommaKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__4__Impl
	rule__Scope__Group_4__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getUntilKeyword_4_4()); }
	'until'
	{ after(grammarAccess.getScopeAccess().getUntilKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Scope__Group_4__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__Group_4__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getScopeAccess().getRAssignment_4_5()); }
	(rule__Scope__RAssignment_4_5)
	{ after(grammarAccess.getScopeAccess().getRAssignment_4_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Universality__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Universality__Group__0__Impl
	rule__Universality__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalityAccess().getItKeyword_0()); }
	'it'
	{ after(grammarAccess.getUniversalityAccess().getItKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Universality__Group__1__Impl
	rule__Universality__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalityAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getUniversalityAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Universality__Group__2__Impl
	rule__Universality__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalityAccess().getAlwaysKeyword_2()); }
	'always'
	{ after(grammarAccess.getUniversalityAccess().getAlwaysKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Universality__Group__3__Impl
	rule__Universality__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalityAccess().getTheKeyword_3()); }
	'the'
	{ after(grammarAccess.getUniversalityAccess().getTheKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Universality__Group__4__Impl
	rule__Universality__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalityAccess().getCaseKeyword_4()); }
	'case'
	{ after(grammarAccess.getUniversalityAccess().getCaseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Universality__Group__5__Impl
	rule__Universality__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalityAccess().getThatKeyword_5()); }
	'that'
	{ after(grammarAccess.getUniversalityAccess().getThatKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Universality__Group__6__Impl
	rule__Universality__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalityAccess().getPAssignment_6()); }
	(rule__Universality__PAssignment_6)
	{ after(grammarAccess.getUniversalityAccess().getPAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Universality__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUniversalityAccess().getHoldsKeyword_7()); }
	('holds')?
	{ after(grammarAccess.getUniversalityAccess().getHoldsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Absence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absence__Group__0__Impl
	rule__Absence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsenceAccess().getItKeyword_0()); }
	'it'
	{ after(grammarAccess.getAbsenceAccess().getItKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absence__Group__1__Impl
	rule__Absence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsenceAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getAbsenceAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absence__Group__2__Impl
	rule__Absence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsenceAccess().getNeverKeyword_2()); }
	'never'
	{ after(grammarAccess.getAbsenceAccess().getNeverKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absence__Group__3__Impl
	rule__Absence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsenceAccess().getTheKeyword_3()); }
	'the'
	{ after(grammarAccess.getAbsenceAccess().getTheKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absence__Group__4__Impl
	rule__Absence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsenceAccess().getCaseKeyword_4()); }
	'case'
	{ after(grammarAccess.getAbsenceAccess().getCaseKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absence__Group__5__Impl
	rule__Absence__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsenceAccess().getThatKeyword_5()); }
	'that'
	{ after(grammarAccess.getAbsenceAccess().getThatKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absence__Group__6__Impl
	rule__Absence__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsenceAccess().getPAssignment_6()); }
	(rule__Absence__PAssignment_6)
	{ after(grammarAccess.getAbsenceAccess().getPAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Absence__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAbsenceAccess().getHoldsKeyword_7()); }
	('holds')?
	{ after(grammarAccess.getAbsenceAccess().getHoldsKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Existence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Existence__Group__0__Impl
	rule__Existence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Existence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceAccess().getPAssignment_0()); }
	(rule__Existence__PAssignment_0)
	{ after(grammarAccess.getExistenceAccess().getPAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Existence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Existence__Group__1__Impl
	rule__Existence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Existence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceAccess().getHoldsKeyword_1()); }
	('holds')?
	{ after(grammarAccess.getExistenceAccess().getHoldsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Existence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Existence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Existence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExistenceAccess().getEventuallyKeyword_2()); }
	'eventually'
	{ after(grammarAccess.getExistenceAccess().getEventuallyKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoundedExistence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedExistence__Group__0__Impl
	rule__BoundedExistence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedExistenceAccess().getPAssignment_0()); }
	(rule__BoundedExistence__PAssignment_0)
	{ after(grammarAccess.getBoundedExistenceAccess().getPAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedExistence__Group__1__Impl
	rule__BoundedExistence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedExistenceAccess().getHoldsKeyword_1()); }
	('holds')?
	{ after(grammarAccess.getBoundedExistenceAccess().getHoldsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedExistence__Group__2__Impl
	rule__BoundedExistence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedExistenceAccess().getAtKeyword_2()); }
	'at'
	{ after(grammarAccess.getBoundedExistenceAccess().getAtKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedExistence__Group__3__Impl
	rule__BoundedExistence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedExistenceAccess().getMostKeyword_3()); }
	'most'
	{ after(grammarAccess.getBoundedExistenceAccess().getMostKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedExistence__Group__4__Impl
	rule__BoundedExistence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedExistenceAccess().getNAssignment_4()); }
	(rule__BoundedExistence__NAssignment_4)
	{ after(grammarAccess.getBoundedExistenceAccess().getNAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoundedExistence__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoundedExistenceAccess().getTimesKeyword_5()); }
	'times'
	{ after(grammarAccess.getBoundedExistenceAccess().getTimesKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Precedence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__0__Impl
	rule__Precedence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getPrecedenceAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__1__Impl
	rule__Precedence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getPAssignment_1()); }
	(rule__Precedence__PAssignment_1)
	{ after(grammarAccess.getPrecedenceAccess().getPAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__2__Impl
	rule__Precedence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getHoldsKeyword_2()); }
	('holds')?
	{ after(grammarAccess.getPrecedenceAccess().getHoldsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__3__Impl
	rule__Precedence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getPrecedenceAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__4__Impl
	rule__Precedence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getPrecedenceAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__5__Impl
	rule__Precedence__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getItKeyword_5()); }
	'it'
	{ after(grammarAccess.getPrecedenceAccess().getItKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__6__Impl
	rule__Precedence__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getMustKeyword_6()); }
	'must'
	{ after(grammarAccess.getPrecedenceAccess().getMustKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__7__Impl
	rule__Precedence__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getHaveKeyword_7()); }
	'have'
	{ after(grammarAccess.getPrecedenceAccess().getHaveKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__8__Impl
	rule__Precedence__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getBeenKeyword_8()); }
	'been'
	{ after(grammarAccess.getPrecedenceAccess().getBeenKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__9__Impl
	rule__Precedence__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getTheKeyword_9()); }
	'the'
	{ after(grammarAccess.getPrecedenceAccess().getTheKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__10__Impl
	rule__Precedence__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getCaseKeyword_10()); }
	'case'
	{ after(grammarAccess.getPrecedenceAccess().getCaseKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__11__Impl
	rule__Precedence__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getThatKeyword_11()); }
	'that'
	{ after(grammarAccess.getPrecedenceAccess().getThatKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__12__Impl
	rule__Precedence__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getSAssignment_12()); }
	(rule__Precedence__SAssignment_12)
	{ after(grammarAccess.getPrecedenceAccess().getSAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__13__Impl
	rule__Precedence__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getGroup_13()); }
	(rule__Precedence__Group_13__0)?
	{ after(grammarAccess.getPrecedenceAccess().getGroup_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getBeforehandKeyword_14()); }
	'beforehand'
	{ after(grammarAccess.getPrecedenceAccess().getBeforehandKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Precedence__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group_13__0__Impl
	rule__Precedence__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getHasKeyword_13_0()); }
	'has'
	{ after(grammarAccess.getPrecedenceAccess().getHasKeyword_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Precedence__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrecedenceAccess().getOccurredKeyword_13_1()); }
	'occurred'
	{ after(grammarAccess.getPrecedenceAccess().getOccurredKeyword_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Response__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__0__Impl
	rule__Response__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getResponseAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__1__Impl
	rule__Response__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getPAssignment_1()); }
	(rule__Response__PAssignment_1)
	{ after(grammarAccess.getResponseAccess().getPAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__2__Impl
	rule__Response__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getGroup_2()); }
	(rule__Response__Group_2__0)?
	{ after(grammarAccess.getResponseAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__3__Impl
	rule__Response__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getResponseAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__4__Impl
	rule__Response__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getResponseAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__5__Impl
	rule__Response__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getInKeyword_5()); }
	'in'
	{ after(grammarAccess.getResponseAccess().getInKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__6__Impl
	rule__Response__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getResponseKeyword_6()); }
	'response'
	{ after(grammarAccess.getResponseAccess().getResponseKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__7__Impl
	rule__Response__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getSAssignment_7()); }
	(rule__Response__SAssignment_7)
	{ after(grammarAccess.getResponseAccess().getSAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getGroup_8()); }
	(rule__Response__Group_8__0)?
	{ after(grammarAccess.getResponseAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Response__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group_2__0__Impl
	rule__Response__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getHasKeyword_2_0()); }
	'has'
	{ after(grammarAccess.getResponseAccess().getHasKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getOccurredKeyword_2_1()); }
	'occurred'
	{ after(grammarAccess.getResponseAccess().getOccurredKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Response__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group_8__0__Impl
	rule__Response__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getEventuallyKeyword_8_0()); }
	'eventually'
	{ after(grammarAccess.getResponseAccess().getEventuallyKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Response__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getResponseAccess().getHoldsKeyword_8_1()); }
	'holds'
	{ after(grammarAccess.getResponseAccess().getHoldsKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Proposition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_0__0__Impl
	rule__Proposition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getMockPropositionAction_0_0()); }
	()
	{ after(grammarAccess.getPropositionAccess().getMockPropositionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getTodoKeyword_0_1()); }
	'todo'
	{ after(grammarAccess.getPropositionAccess().getTodoKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Proposition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_1__0__Impl
	rule__Proposition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getPropsAssignment_1_0()); }
	(rule__Proposition__PropsAssignment_1_0)
	{ after(grammarAccess.getPropositionAccess().getPropsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getGroup_1_1()); }
	(rule__Proposition__Group_1_1__0)*
	{ after(grammarAccess.getPropositionAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Proposition__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_1_1__0__Impl
	rule__Proposition__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getAndKeyword_1_1_0()); }
	'and'
	{ after(grammarAccess.getPropositionAccess().getAndKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_1_1__1__Impl
	rule__Proposition__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getAlsoKeyword_1_1_1()); }
	'also'
	{ after(grammarAccess.getPropositionAccess().getAlsoKeyword_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Proposition__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPropositionAccess().getPropsAssignment_1_1_2()); }
	(rule__Proposition__PropsAssignment_1_1_2)
	{ after(grammarAccess.getPropositionAccess().getPropsAssignment_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicProposition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group__0__Impl
	rule__AtomicProposition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getInstAssignment_0()); }
	(rule__AtomicProposition__InstAssignment_0)
	{ after(grammarAccess.getAtomicPropositionAccess().getInstAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group__1__Impl
	rule__AtomicProposition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getGroup_1()); }
	(rule__AtomicProposition__Group_1__0)?
	{ after(grammarAccess.getAtomicPropositionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getGroup_2()); }
	(rule__AtomicProposition__Group_2__0)?
	{ after(grammarAccess.getAtomicPropositionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicProposition__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_1__0__Impl
	rule__AtomicProposition__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getWithKeyword_1_0()); }
	'with'
	{ after(grammarAccess.getAtomicPropositionAccess().getWithKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_1__1__Impl
	rule__AtomicProposition__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getCondAssignment_1_1()); }
	(rule__AtomicProposition__CondAssignment_1_1)
	{ after(grammarAccess.getAtomicPropositionAccess().getCondAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getGroup_1_2()); }
	(rule__AtomicProposition__Group_1_2__0)*
	{ after(grammarAccess.getAtomicPropositionAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicProposition__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_1_2__0__Impl
	rule__AtomicProposition__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getAndKeyword_1_2_0()); }
	'and'
	{ after(grammarAccess.getAtomicPropositionAccess().getAndKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getCondAssignment_1_2_1()); }
	(rule__AtomicProposition__CondAssignment_1_2_1)
	{ after(grammarAccess.getAtomicPropositionAccess().getCondAssignment_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicProposition__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_2__0__Impl
	rule__AtomicProposition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getAssocAssignment_2_0()); }
	(rule__AtomicProposition__AssocAssignment_2_0)
	{ after(grammarAccess.getAtomicPropositionAccess().getAssocAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_2__1__Impl
	rule__AtomicProposition__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getInst2Assignment_2_1()); }
	(rule__AtomicProposition__Inst2Assignment_2_1)
	{ after(grammarAccess.getAtomicPropositionAccess().getInst2Assignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getGroup_2_2()); }
	(rule__AtomicProposition__Group_2_2__0)?
	{ after(grammarAccess.getAtomicPropositionAccess().getGroup_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicProposition__Group_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_2_2__0__Impl
	rule__AtomicProposition__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getWithKeyword_2_2_0()); }
	'with'
	{ after(grammarAccess.getAtomicPropositionAccess().getWithKeyword_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_2_2__1__Impl
	rule__AtomicProposition__Group_2_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getCond2Assignment_2_2_1()); }
	(rule__AtomicProposition__Cond2Assignment_2_2_1)
	{ after(grammarAccess.getAtomicPropositionAccess().getCond2Assignment_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_2_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getGroup_2_2_2()); }
	(rule__AtomicProposition__Group_2_2_2__0)*
	{ after(grammarAccess.getAtomicPropositionAccess().getGroup_2_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicProposition__Group_2_2_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_2_2_2__0__Impl
	rule__AtomicProposition__Group_2_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2_2_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getAndKeyword_2_2_2_0()); }
	'and'
	{ after(grammarAccess.getAtomicPropositionAccess().getAndKeyword_2_2_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2_2_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__AtomicProposition__Group_2_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Group_2_2_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAtomicPropositionAccess().getCond2Assignment_2_2_2_1()); }
	(rule__AtomicProposition__Cond2Assignment_2_2_2_1)
	{ after(grammarAccess.getAtomicPropositionAccess().getCond2Assignment_2_2_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group_2__0__Impl
	rule__BooleanExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getConditionAction_2_0()); }
	()
	{ after(grammarAccess.getBooleanExpressionAccess().getConditionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanExpression__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanExpressionAccess().getAttrAssignment_2_1()); }
	(rule__BooleanExpression__AttrAssignment_2_1)
	{ after(grammarAccess.getBooleanExpressionAccess().getAttrAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_0__0__Impl
	rule__BinaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getEqualsConditionAction_0_0()); }
	()
	{ after(grammarAccess.getBinaryExpressionAccess().getEqualsConditionAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_0__1__Impl
	rule__BinaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getAttrAssignment_0_1()); }
	(rule__BinaryExpression__AttrAssignment_0_1)
	{ after(grammarAccess.getBinaryExpressionAccess().getAttrAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_0__2__Impl
	rule__BinaryExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getAsKeyword_0_2()); }
	'as'
	{ after(grammarAccess.getBinaryExpressionAccess().getAsKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getValAssignment_0_3()); }
	(rule__BinaryExpression__ValAssignment_0_3)
	{ after(grammarAccess.getBinaryExpressionAccess().getValAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1__0__Impl
	rule__BinaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getLessThanConditionAction_1_0()); }
	()
	{ after(grammarAccess.getBinaryExpressionAccess().getLessThanConditionAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1__1__Impl
	rule__BinaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getAttrAssignment_1_1()); }
	(rule__BinaryExpression__AttrAssignment_1_1)
	{ after(grammarAccess.getBinaryExpressionAccess().getAttrAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1__2__Impl
	rule__BinaryExpression__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getLessKeyword_1_2()); }
	'less'
	{ after(grammarAccess.getBinaryExpressionAccess().getLessKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1__3__Impl
	rule__BinaryExpression__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getThanKeyword_1_3()); }
	'than'
	{ after(grammarAccess.getBinaryExpressionAccess().getThanKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getValAssignment_1_4()); }
	(rule__BinaryExpression__ValAssignment_1_4)
	{ after(grammarAccess.getBinaryExpressionAccess().getValAssignment_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BinaryExpression__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_2__0__Impl
	rule__BinaryExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getGreaterThanConditionAction_2_0()); }
	()
	{ after(grammarAccess.getBinaryExpressionAccess().getGreaterThanConditionAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_2__1__Impl
	rule__BinaryExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getAttrAssignment_2_1()); }
	(rule__BinaryExpression__AttrAssignment_2_1)
	{ after(grammarAccess.getBinaryExpressionAccess().getAttrAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_2__2__Impl
	rule__BinaryExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getGreaterKeyword_2_2()); }
	'greater'
	{ after(grammarAccess.getBinaryExpressionAccess().getGreaterKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_2__3__Impl
	rule__BinaryExpression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getThanKeyword_2_3()); }
	'than'
	{ after(grammarAccess.getBinaryExpressionAccess().getThanKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BinaryExpression__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBinaryExpressionAccess().getValAssignment_2_4()); }
	(rule__BinaryExpression__ValAssignment_2_4)
	{ after(grammarAccess.getBinaryExpressionAccess().getValAssignment_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__0__Impl
	rule__UnaryExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getNotConditionAction_0()); }
	()
	{ after(grammarAccess.getUnaryExpressionAccess().getNotConditionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__1__Impl
	rule__UnaryExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getNotKeyword_1()); }
	'not'
	{ after(grammarAccess.getUnaryExpressionAccess().getNotKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UnaryExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUnaryExpressionAccess().getAttrAssignment_2()); }
	(rule__UnaryExpression__AttrAssignment_2)
	{ after(grammarAccess.getUnaryExpressionAccess().getAttrAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__InstanceDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceDecl__Group__0__Impl
	rule__InstanceDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceDeclAccess().getAlternatives_0()); }
	(rule__InstanceDecl__Alternatives_0)
	{ after(grammarAccess.getInstanceDeclAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceDecl__Group__1__Impl
	rule__InstanceDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceDeclAccess().getTypeAssignment_1()); }
	(rule__InstanceDecl__TypeAssignment_1)
	{ after(grammarAccess.getInstanceDeclAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__InstanceDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstanceDeclAccess().getNameAssignment_2()); }
	(rule__InstanceDecl__NameAssignment_2)?
	{ after(grammarAccess.getInstanceDeclAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_0__0__Impl
	rule__Association__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTasksAssociationAction_0_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getTasksAssociationAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_0__1__Impl
	rule__Association__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getThatKeyword_0_1()); }
	'that'
	{ after(grammarAccess.getAssociationAccess().getThatKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_0__2__Impl
	rule__Association__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getIsKeyword_0_2()); }
	'is'
	{ after(grammarAccess.getAssociationAccess().getIsKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_0__3__Impl
	rule__Association__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAKeyword_0_3()); }
	'a'
	{ after(grammarAccess.getAssociationAccess().getAKeyword_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_0__4__Impl
	rule__Association__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTaskKeyword_0_4()); }
	'task'
	{ after(grammarAccess.getAssociationAccess().getTaskKeyword_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_0__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getOfKeyword_0_5()); }
	'of'
	{ after(grammarAccess.getAssociationAccess().getOfKeyword_0_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_1__0__Impl
	rule__Association__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTeamAssociationAction_1_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getTeamAssociationAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_1__1__Impl
	rule__Association__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getThatKeyword_1_1()); }
	'that'
	{ after(grammarAccess.getAssociationAccess().getThatKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_1__2__Impl
	rule__Association__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getIsKeyword_1_2()); }
	'is'
	{ after(grammarAccess.getAssociationAccess().getIsKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_1__3__Impl
	rule__Association__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAKeyword_1_3()); }
	'a'
	{ after(grammarAccess.getAssociationAccess().getAKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_1__4__Impl
	rule__Association__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTeamKeyword_1_4()); }
	'team'
	{ after(grammarAccess.getAssociationAccess().getTeamKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getOfKeyword_1_5()); }
	'of'
	{ after(grammarAccess.getAssociationAccess().getOfKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_2__0__Impl
	rule__Association__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getRobotsAssociationAction_2_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getRobotsAssociationAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_2__1__Impl
	rule__Association__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getThatKeyword_2_1()); }
	'that'
	{ after(grammarAccess.getAssociationAccess().getThatKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_2__2__Impl
	rule__Association__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getIsKeyword_2_2()); }
	'is'
	{ after(grammarAccess.getAssociationAccess().getIsKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getInKeyword_2_3()); }
	'in'
	{ after(grammarAccess.getAssociationAccess().getInKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_3__0__Impl
	rule__Association__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCurrentTaskAssociationAction_3_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getCurrentTaskAssociationAction_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_3__1__Impl
	rule__Association__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCurrentlyKeyword_3_1()); }
	('currently')?
	{ after(grammarAccess.getAssociationAccess().getCurrentlyKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getDoingKeyword_3_2()); }
	'doing'
	{ after(grammarAccess.getAssociationAccess().getDoingKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_4__0__Impl
	rule__Association__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCoveredTasksAssociationAction_4_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getCoveredTasksAssociationAction_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_4__1__Impl
	rule__Association__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getThatKeyword_4_1()); }
	'that'
	{ after(grammarAccess.getAssociationAccess().getThatKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_4__2__Impl
	rule__Association__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getHasKeyword_4_2()); }
	'has'
	{ after(grammarAccess.getAssociationAccess().getHasKeyword_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getScheduledKeyword_4_3()); }
	'scheduled'
	{ after(grammarAccess.getAssociationAccess().getScheduledKeyword_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__0__Impl
	rule__Association__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTodoTasksAssociationAction_5_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getTodoTasksAssociationAction_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__1__Impl
	rule__Association__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getThatKeyword_5_1()); }
	'that'
	{ after(grammarAccess.getAssociationAccess().getThatKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__2__Impl
	rule__Association__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getHasKeyword_5_2()); }
	'has'
	{ after(grammarAccess.getAssociationAccess().getHasKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__3__Impl
	rule__Association__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getPlannedKeyword_5_3()); }
	'planned'
	{ after(grammarAccess.getAssociationAccess().getPlannedKeyword_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__4__Impl
	rule__Association__Group_5__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getInKeyword_5_4()); }
	'in'
	{ after(grammarAccess.getAssociationAccess().getInKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__5__Impl
	rule__Association__Group_5__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTheKeyword_5_5()); }
	'the'
	{ after(grammarAccess.getAssociationAccess().getTheKeyword_5_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_5__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_5__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getFutureKeyword_5_6()); }
	'future'
	{ after(grammarAccess.getAssociationAccess().getFutureKeyword_5_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_6__0__Impl
	rule__Association__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getFinishedTasksAssociationAction_6_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getFinishedTasksAssociationAction_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_6__1__Impl
	rule__Association__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getThatKeyword_6_1()); }
	'that'
	{ after(grammarAccess.getAssociationAccess().getThatKeyword_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_6__2__Impl
	rule__Association__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getHasKeyword_6_2()); }
	'has'
	{ after(grammarAccess.getAssociationAccess().getHasKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_6__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getFinishedKeyword_6_3()); }
	'finished'
	{ after(grammarAccess.getAssociationAccess().getFinishedKeyword_6_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_7__0__Impl
	rule__Association__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getPerformingActionAssociationAction_7_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getPerformingActionAssociationAction_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_7__1__Impl
	rule__Association__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCurrentlyKeyword_7_1()); }
	('currently')?
	{ after(grammarAccess.getAssociationAccess().getCurrentlyKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getPerformingKeyword_7_2()); }
	'performing'
	{ after(grammarAccess.getAssociationAccess().getPerformingKeyword_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_8__0__Impl
	rule__Association__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getInAssociationAction_8_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getInAssociationAction_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_8__1__Impl
	rule__Association__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCurrentlyKeyword_8_1()); }
	('currently')?
	{ after(grammarAccess.getAssociationAccess().getCurrentlyKeyword_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_8__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_8__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_8__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getInKeyword_8_2()); }
	'in'
	{ after(grammarAccess.getAssociationAccess().getInKeyword_8_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_9__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_9__0__Impl
	rule__Association__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_9__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCurrentPositionAssociationAction_9_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getCurrentPositionAssociationAction_9_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_9__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_9__1__Impl
	rule__Association__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_9__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCurrentlyKeyword_9_1()); }
	('currently')?
	{ after(grammarAccess.getAssociationAccess().getCurrentlyKeyword_9_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_9__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_9__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getOnKeyword_9_2()); }
	'on'
	{ after(grammarAccess.getAssociationAccess().getOnKeyword_9_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_10__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_10__0__Impl
	rule__Association__Group_10__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_10__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getHomeAssociationAction_10_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getHomeAssociationAction_10_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_10__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_10__1__Impl
	rule__Association__Group_10__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_10__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWithKeyword_10_1()); }
	'with'
	{ after(grammarAccess.getAssociationAccess().getWithKeyword_10_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_10__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_10__2__Impl
	rule__Association__Group_10__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_10__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAsKeyword_10_2()); }
	'as'
	{ after(grammarAccess.getAssociationAccess().getAsKeyword_10_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_10__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_10__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_10__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getHomeKeyword_10_3()); }
	'home'
	{ after(grammarAccess.getAssociationAccess().getHomeKeyword_10_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_11__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_11__0__Impl
	rule__Association__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTaskAreaAssociationAction_11_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getTaskAreaAssociationAction_11_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_11__1__Impl
	rule__Association__Group_11__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWithKeyword_11_1()); }
	'with'
	{ after(grammarAccess.getAssociationAccess().getWithKeyword_11_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_11__2__Impl
	rule__Association__Group_11__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTaskKeyword_11_2()); }
	'task'
	{ after(grammarAccess.getAssociationAccess().getTaskKeyword_11_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_11__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_11__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getAreaKeyword_11_3()); }
	'area'
	{ after(grammarAccess.getAssociationAccess().getAreaKeyword_11_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_12__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_12__0__Impl
	rule__Association__Group_12__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_12__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getCoveredPointsAssociationAction_12_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getCoveredPointsAssociationAction_12_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_12__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_12__1__Impl
	rule__Association__Group_12__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_12__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWhichKeyword_12_1()); }
	'which'
	{ after(grammarAccess.getAssociationAccess().getWhichKeyword_12_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_12__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_12__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_12__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getVisitsKeyword_12_2()); }
	'visits'
	{ after(grammarAccess.getAssociationAccess().getVisitsKeyword_12_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_13__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_13__0__Impl
	rule__Association__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTodoPointsAssociationAction_13_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getTodoPointsAssociationAction_13_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_13__1__Impl
	rule__Association__Group_13__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWhichKeyword_13_1()); }
	'which'
	{ after(grammarAccess.getAssociationAccess().getWhichKeyword_13_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_13__2__Impl
	rule__Association__Group_13__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWillKeyword_13_2()); }
	'will'
	{ after(grammarAccess.getAssociationAccess().getWillKeyword_13_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_13__3__Impl
	rule__Association__Group_13__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getVisitKeyword_13_3()); }
	'visit'
	{ after(grammarAccess.getAssociationAccess().getVisitKeyword_13_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_13__4__Impl
	rule__Association__Group_13__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getInKeyword_13_4()); }
	'in'
	{ after(grammarAccess.getAssociationAccess().getInKeyword_13_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_13__5__Impl
	rule__Association__Group_13__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getTheKeyword_13_5()); }
	'the'
	{ after(grammarAccess.getAssociationAccess().getTheKeyword_13_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_13__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_13__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getFutureKeyword_13_6()); }
	'future'
	{ after(grammarAccess.getAssociationAccess().getFutureKeyword_13_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_14__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_14__0__Impl
	rule__Association__Group_14__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_14__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getFinishedPointsAssociationAction_14_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getFinishedPointsAssociationAction_14_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_14__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_14__1__Impl
	rule__Association__Group_14__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_14__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWhichKeyword_14_1()); }
	'which'
	{ after(grammarAccess.getAssociationAccess().getWhichKeyword_14_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_14__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_14__2__Impl
	rule__Association__Group_14__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_14__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getHasKeyword_14_2()); }
	'has'
	{ after(grammarAccess.getAssociationAccess().getHasKeyword_14_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_14__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_14__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_14__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getVisitedKeyword_14_3()); }
	'visited'
	{ after(grammarAccess.getAssociationAccess().getVisitedKeyword_14_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_15__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_15__0__Impl
	rule__Association__Group_15__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_15__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getPointsAssociationAction_15_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getPointsAssociationAction_15_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_15__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_15__1__Impl
	rule__Association__Group_15__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_15__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWithKeyword_15_1()); }
	'with'
	{ after(grammarAccess.getAssociationAccess().getWithKeyword_15_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_15__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_15__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_15__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getPointsKeyword_15_2()); }
	'points'
	{ after(grammarAccess.getAssociationAccess().getPointsKeyword_15_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_16__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_16__0__Impl
	rule__Association__Group_16__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_16__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getInitialPositionAssociationAction_16_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getInitialPositionAssociationAction_16_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_16__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_16__1__Impl
	rule__Association__Group_16__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_16__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWithKeyword_16_1()); }
	'with'
	{ after(grammarAccess.getAssociationAccess().getWithKeyword_16_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_16__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_16__2__Impl
	rule__Association__Group_16__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_16__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getInitialKeyword_16_2()); }
	'initial'
	{ after(grammarAccess.getAssociationAccess().getInitialKeyword_16_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_16__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_16__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_16__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getPositionKeyword_16_3()); }
	'position'
	{ after(grammarAccess.getAssociationAccess().getPositionKeyword_16_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Association__Group_17__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_17__0__Impl
	rule__Association__Group_17__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_17__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getReferenceAssociationAction_17_0()); }
	()
	{ after(grammarAccess.getAssociationAccess().getReferenceAssociationAction_17_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_17__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_17__1__Impl
	rule__Association__Group_17__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_17__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getWhichKeyword_17_1()); }
	'which'
	{ after(grammarAccess.getAssociationAccess().getWhichKeyword_17_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_17__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Association__Group_17__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Association__Group_17__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssociationAccess().getReferencesKeyword_17_2()); }
	'references'
	{ after(grammarAccess.getAssociationAccess().getReferencesKeyword_17_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignedInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedInt__Group__0__Impl
	rule__SignedInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getSignedIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SignedReal__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedReal__Group__0__Impl
	rule__SignedReal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SignedReal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignedReal__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSignedRealAccess().getREALTerminalRuleCall_1()); }
	RULE_REAL
	{ after(grammarAccess.getSignedRealAccess().getREALTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MissionSpecification__PropertiesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMissionSpecificationAccess().getPropertiesPropertyParserRuleCall_0()); }
		ruleProperty
		{ after(grammarAccess.getMissionSpecificationAccess().getPropertiesPropertyParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__ScopeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getScopeScopeParserRuleCall_0_0()); }
		ruleScope
		{ after(grammarAccess.getPropertyAccess().getScopeScopeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Property__PatternAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropertyAccess().getPatternPatternParserRuleCall_2_0()); }
		rulePattern
		{ after(grammarAccess.getPropertyAccess().getPatternPatternParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__RAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_1_2_0()); }
		ruleProposition
		{ after(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__QAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_2_2_0()); }
		ruleProposition
		{ after(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__QAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_3_2_0()); }
		ruleProposition
		{ after(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__RAssignment_3_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_3_5_0()); }
		ruleProposition
		{ after(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_3_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__QAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_4_2_0()); }
		ruleProposition
		{ after(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Scope__RAssignment_4_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_4_5_0()); }
		ruleProposition
		{ after(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_4_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Universality__PAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUniversalityAccess().getPPropositionParserRuleCall_6_0()); }
		ruleProposition
		{ after(grammarAccess.getUniversalityAccess().getPPropositionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Absence__PAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAbsenceAccess().getPPropositionParserRuleCall_6_0()); }
		ruleProposition
		{ after(grammarAccess.getAbsenceAccess().getPPropositionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Existence__PAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExistenceAccess().getPPropositionParserRuleCall_0_0()); }
		ruleProposition
		{ after(grammarAccess.getExistenceAccess().getPPropositionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__PAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundedExistenceAccess().getPPropositionParserRuleCall_0_0()); }
		ruleProposition
		{ after(grammarAccess.getBoundedExistenceAccess().getPPropositionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundedExistence__NAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoundedExistenceAccess().getNINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getBoundedExistenceAccess().getNINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__PAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrecedenceAccess().getPPropositionParserRuleCall_1_0()); }
		ruleProposition
		{ after(grammarAccess.getPrecedenceAccess().getPPropositionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Precedence__SAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrecedenceAccess().getSPropositionParserRuleCall_12_0()); }
		ruleProposition
		{ after(grammarAccess.getPrecedenceAccess().getSPropositionParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__PAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResponseAccess().getPPropositionParserRuleCall_1_0()); }
		ruleProposition
		{ after(grammarAccess.getResponseAccess().getPPropositionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Response__SAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getResponseAccess().getSPropositionParserRuleCall_7_0()); }
		ruleProposition
		{ after(grammarAccess.getResponseAccess().getSPropositionParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__PropsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropositionAccess().getPropsAtomicPropositionParserRuleCall_1_0_0()); }
		ruleAtomicProposition
		{ after(grammarAccess.getPropositionAccess().getPropsAtomicPropositionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Proposition__PropsAssignment_1_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPropositionAccess().getPropsAtomicPropositionParserRuleCall_1_1_2_0()); }
		ruleAtomicProposition
		{ after(grammarAccess.getPropositionAccess().getPropsAtomicPropositionParserRuleCall_1_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__InstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicPropositionAccess().getInstInstanceParserRuleCall_0_0()); }
		ruleInstance
		{ after(grammarAccess.getAtomicPropositionAccess().getInstInstanceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__CondAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicPropositionAccess().getCondBooleanExpressionParserRuleCall_1_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getAtomicPropositionAccess().getCondBooleanExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__CondAssignment_1_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicPropositionAccess().getCondBooleanExpressionParserRuleCall_1_2_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getAtomicPropositionAccess().getCondBooleanExpressionParserRuleCall_1_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__AssocAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicPropositionAccess().getAssocAssociationParserRuleCall_2_0_0()); }
		ruleAssociation
		{ after(grammarAccess.getAtomicPropositionAccess().getAssocAssociationParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Inst2Assignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicPropositionAccess().getInst2InstanceParserRuleCall_2_1_0()); }
		ruleInstance
		{ after(grammarAccess.getAtomicPropositionAccess().getInst2InstanceParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Cond2Assignment_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicPropositionAccess().getCond2BooleanExpressionParserRuleCall_2_2_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getAtomicPropositionAccess().getCond2BooleanExpressionParserRuleCall_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicProposition__Cond2Assignment_2_2_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAtomicPropositionAccess().getCond2BooleanExpressionParserRuleCall_2_2_2_1_0()); }
		ruleBooleanExpression
		{ after(grammarAccess.getAtomicPropositionAccess().getCond2BooleanExpressionParserRuleCall_2_2_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExpression__AttrAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpressionAccess().getAttrAttributeParserRuleCall_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getBooleanExpressionAccess().getAttrAttributeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__AttrAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_0_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__ValAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_0_3_0()); }
		ruleLiteral
		{ after(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__AttrAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_1_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__ValAssignment_1_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_1_4_0()); }
		ruleLiteral
		{ after(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_1_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__AttrAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_2_1_0()); }
		ruleAttribute
		{ after(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BinaryExpression__ValAssignment_2_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_2_4_0()); }
		ruleLiteral
		{ after(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_2_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryExpression__AttrAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnaryExpressionAccess().getAttrAttributeParserRuleCall_2_0()); }
		ruleAttribute
		{ after(grammarAccess.getUnaryExpressionAccess().getAttrAttributeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDecl__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceDeclAccess().getTypeTypeParserRuleCall_1_0()); }
		ruleType
		{ after(grammarAccess.getInstanceDeclAccess().getTypeTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceDecl__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceDeclAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getInstanceDeclAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRef__RefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstanceRefAccess().getRefInstanceDeclCrossReference_0()); }
		(
			{ before(grammarAccess.getInstanceRefAccess().getRefInstanceDeclIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getInstanceRefAccess().getRefInstanceDeclIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getInstanceRefAccess().getRefInstanceDeclCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValueSignedIntParserRuleCall_0()); }
		ruleSignedInt
		{ after(grammarAccess.getIntLiteralAccess().getValueSignedIntParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RealLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRealLiteralAccess().getValueSignedRealParserRuleCall_0()); }
		ruleSignedReal
		{ after(grammarAccess.getRealLiteralAccess().getValueSignedRealParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getValueAlternatives_0()); }
		(rule__BoolLiteral__ValueAlternatives_0)
		{ after(grammarAccess.getBoolLiteralAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_REAL : RULE_INT? '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
