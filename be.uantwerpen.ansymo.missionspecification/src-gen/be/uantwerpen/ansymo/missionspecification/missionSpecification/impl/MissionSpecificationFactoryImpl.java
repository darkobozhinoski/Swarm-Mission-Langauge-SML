/**
 * generated by Xtext 2.10.0
 */
package be.uantwerpen.ansymo.missionspecification.missionSpecification.impl;

import be.uantwerpen.ansymo.missionspecification.missionSpecification.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class MissionSpecificationFactoryImpl extends EFactoryImpl implements MissionSpecificationFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static MissionSpecificationFactory init()
  {
    try
    {
      MissionSpecificationFactory theMissionSpecificationFactory = (MissionSpecificationFactory)EPackage.Registry.INSTANCE.getEFactory(MissionSpecificationPackage.eNS_URI);
      if (theMissionSpecificationFactory != null)
      {
        return theMissionSpecificationFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new MissionSpecificationFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MissionSpecificationFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case MissionSpecificationPackage.MISSION_SPECIFICATION: return createMissionSpecification();
      case MissionSpecificationPackage.PROPERTY: return createProperty();
      case MissionSpecificationPackage.SCOPE: return createScope();
      case MissionSpecificationPackage.PATTERN: return createPattern();
      case MissionSpecificationPackage.OCCURENCE: return createOccurence();
      case MissionSpecificationPackage.UNIVERSALITY: return createUniversality();
      case MissionSpecificationPackage.ABSENCE: return createAbsence();
      case MissionSpecificationPackage.EXISTENCE: return createExistence();
      case MissionSpecificationPackage.BOUNDED_EXISTENCE: return createBoundedExistence();
      case MissionSpecificationPackage.ORDER: return createOrder();
      case MissionSpecificationPackage.PRECEDENCE: return createPrecedence();
      case MissionSpecificationPackage.RESPONSE: return createResponse();
      case MissionSpecificationPackage.PROPOSITION: return createProposition();
      case MissionSpecificationPackage.ATOMIC_PROPOSITION: return createAtomicProposition();
      case MissionSpecificationPackage.BOOLEAN_EXPRESSION: return createBooleanExpression();
      case MissionSpecificationPackage.BINARY_EXPRESSION: return createBinaryExpression();
      case MissionSpecificationPackage.UNARY_EXPRESSION: return createUnaryExpression();
      case MissionSpecificationPackage.INSTANCE: return createInstance();
      case MissionSpecificationPackage.INSTANCE_DECL: return createInstanceDecl();
      case MissionSpecificationPackage.INSTANCE_REF: return createInstanceRef();
      case MissionSpecificationPackage.ASSOCIATION: return createAssociation();
      case MissionSpecificationPackage.TYPE: return createType();
      case MissionSpecificationPackage.ATTRIBUTE: return createAttribute();
      case MissionSpecificationPackage.ARITHMETIC_EXPRESSION: return createArithmeticExpression();
      case MissionSpecificationPackage.INT_LITERAL: return createIntLiteral();
      case MissionSpecificationPackage.REAL_LITERAL: return createRealLiteral();
      case MissionSpecificationPackage.STRING_LITERAL: return createStringLiteral();
      case MissionSpecificationPackage.BOOL_LITERAL: return createBoolLiteral();
      case MissionSpecificationPackage.GLOBAL_SCOPE: return createGlobalScope();
      case MissionSpecificationPackage.BEFORE_SCOPE: return createBeforeScope();
      case MissionSpecificationPackage.AFTER_SCOPE: return createAfterScope();
      case MissionSpecificationPackage.BETWEEN_SCOPE: return createBetweenScope();
      case MissionSpecificationPackage.AFTER_UNTIL_SCOPE: return createAfterUntilScope();
      case MissionSpecificationPackage.MOCK_PROPOSITION: return createMockProposition();
      case MissionSpecificationPackage.CONDITION: return createCondition();
      case MissionSpecificationPackage.EQUALS_CONDITION: return createEqualsCondition();
      case MissionSpecificationPackage.LESS_THAN_CONDITION: return createLessThanCondition();
      case MissionSpecificationPackage.GREATER_THAN_CONDITION: return createGreaterThanCondition();
      case MissionSpecificationPackage.NOT_CONDITION: return createNotCondition();
      case MissionSpecificationPackage.TASKS_ASSOCIATION: return createTasksAssociation();
      case MissionSpecificationPackage.TEAM_ASSOCIATION: return createTeamAssociation();
      case MissionSpecificationPackage.ROBOTS_ASSOCIATION: return createRobotsAssociation();
      case MissionSpecificationPackage.CURRENT_TASK_ASSOCIATION: return createCurrentTaskAssociation();
      case MissionSpecificationPackage.COVERED_TASKS_ASSOCIATION: return createCoveredTasksAssociation();
      case MissionSpecificationPackage.TODO_TASKS_ASSOCIATION: return createTodoTasksAssociation();
      case MissionSpecificationPackage.FINISHED_TASKS_ASSOCIATION: return createFinishedTasksAssociation();
      case MissionSpecificationPackage.PERFORMING_ACTION_ASSOCIATION: return createPerformingActionAssociation();
      case MissionSpecificationPackage.IN_ASSOCIATION: return createInAssociation();
      case MissionSpecificationPackage.CURRENT_POSITION_ASSOCIATION: return createCurrentPositionAssociation();
      case MissionSpecificationPackage.HOME_ASSOCIATION: return createHomeAssociation();
      case MissionSpecificationPackage.TASK_AREA_ASSOCIATION: return createTaskAreaAssociation();
      case MissionSpecificationPackage.COVERED_POINTS_ASSOCIATION: return createCoveredPointsAssociation();
      case MissionSpecificationPackage.TODO_POINTS_ASSOCIATION: return createTodoPointsAssociation();
      case MissionSpecificationPackage.FINISHED_POINTS_ASSOCIATION: return createFinishedPointsAssociation();
      case MissionSpecificationPackage.POINTS_ASSOCIATION: return createPointsAssociation();
      case MissionSpecificationPackage.INITIAL_POSITION_ASSOCIATION: return createInitialPositionAssociation();
      case MissionSpecificationPackage.REFERENCE_ASSOCIATION: return createReferenceAssociation();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MissionSpecification createMissionSpecification()
  {
    MissionSpecificationImpl missionSpecification = new MissionSpecificationImpl();
    return missionSpecification;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Property createProperty()
  {
    PropertyImpl property = new PropertyImpl();
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Scope createScope()
  {
    ScopeImpl scope = new ScopeImpl();
    return scope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Pattern createPattern()
  {
    PatternImpl pattern = new PatternImpl();
    return pattern;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Occurence createOccurence()
  {
    OccurenceImpl occurence = new OccurenceImpl();
    return occurence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Universality createUniversality()
  {
    UniversalityImpl universality = new UniversalityImpl();
    return universality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Absence createAbsence()
  {
    AbsenceImpl absence = new AbsenceImpl();
    return absence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Existence createExistence()
  {
    ExistenceImpl existence = new ExistenceImpl();
    return existence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoundedExistence createBoundedExistence()
  {
    BoundedExistenceImpl boundedExistence = new BoundedExistenceImpl();
    return boundedExistence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Order createOrder()
  {
    OrderImpl order = new OrderImpl();
    return order;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Precedence createPrecedence()
  {
    PrecedenceImpl precedence = new PrecedenceImpl();
    return precedence;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Response createResponse()
  {
    ResponseImpl response = new ResponseImpl();
    return response;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Proposition createProposition()
  {
    PropositionImpl proposition = new PropositionImpl();
    return proposition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AtomicProposition createAtomicProposition()
  {
    AtomicPropositionImpl atomicProposition = new AtomicPropositionImpl();
    return atomicProposition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BooleanExpression createBooleanExpression()
  {
    BooleanExpressionImpl booleanExpression = new BooleanExpressionImpl();
    return booleanExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BinaryExpression createBinaryExpression()
  {
    BinaryExpressionImpl binaryExpression = new BinaryExpressionImpl();
    return binaryExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UnaryExpression createUnaryExpression()
  {
    UnaryExpressionImpl unaryExpression = new UnaryExpressionImpl();
    return unaryExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Instance createInstance()
  {
    InstanceImpl instance = new InstanceImpl();
    return instance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InstanceDecl createInstanceDecl()
  {
    InstanceDeclImpl instanceDecl = new InstanceDeclImpl();
    return instanceDecl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InstanceRef createInstanceRef()
  {
    InstanceRefImpl instanceRef = new InstanceRefImpl();
    return instanceRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Association createAssociation()
  {
    AssociationImpl association = new AssociationImpl();
    return association;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Type createType()
  {
    TypeImpl type = new TypeImpl();
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Attribute createAttribute()
  {
    AttributeImpl attribute = new AttributeImpl();
    return attribute;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ArithmeticExpression createArithmeticExpression()
  {
    ArithmeticExpressionImpl arithmeticExpression = new ArithmeticExpressionImpl();
    return arithmeticExpression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public IntLiteral createIntLiteral()
  {
    IntLiteralImpl intLiteral = new IntLiteralImpl();
    return intLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RealLiteral createRealLiteral()
  {
    RealLiteralImpl realLiteral = new RealLiteralImpl();
    return realLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringLiteral createStringLiteral()
  {
    StringLiteralImpl stringLiteral = new StringLiteralImpl();
    return stringLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BoolLiteral createBoolLiteral()
  {
    BoolLiteralImpl boolLiteral = new BoolLiteralImpl();
    return boolLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GlobalScope createGlobalScope()
  {
    GlobalScopeImpl globalScope = new GlobalScopeImpl();
    return globalScope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BeforeScope createBeforeScope()
  {
    BeforeScopeImpl beforeScope = new BeforeScopeImpl();
    return beforeScope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AfterScope createAfterScope()
  {
    AfterScopeImpl afterScope = new AfterScopeImpl();
    return afterScope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public BetweenScope createBetweenScope()
  {
    BetweenScopeImpl betweenScope = new BetweenScopeImpl();
    return betweenScope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public AfterUntilScope createAfterUntilScope()
  {
    AfterUntilScopeImpl afterUntilScope = new AfterUntilScopeImpl();
    return afterUntilScope;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MockProposition createMockProposition()
  {
    MockPropositionImpl mockProposition = new MockPropositionImpl();
    return mockProposition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Condition createCondition()
  {
    ConditionImpl condition = new ConditionImpl();
    return condition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EqualsCondition createEqualsCondition()
  {
    EqualsConditionImpl equalsCondition = new EqualsConditionImpl();
    return equalsCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LessThanCondition createLessThanCondition()
  {
    LessThanConditionImpl lessThanCondition = new LessThanConditionImpl();
    return lessThanCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public GreaterThanCondition createGreaterThanCondition()
  {
    GreaterThanConditionImpl greaterThanCondition = new GreaterThanConditionImpl();
    return greaterThanCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotCondition createNotCondition()
  {
    NotConditionImpl notCondition = new NotConditionImpl();
    return notCondition;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TasksAssociation createTasksAssociation()
  {
    TasksAssociationImpl tasksAssociation = new TasksAssociationImpl();
    return tasksAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TeamAssociation createTeamAssociation()
  {
    TeamAssociationImpl teamAssociation = new TeamAssociationImpl();
    return teamAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RobotsAssociation createRobotsAssociation()
  {
    RobotsAssociationImpl robotsAssociation = new RobotsAssociationImpl();
    return robotsAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CurrentTaskAssociation createCurrentTaskAssociation()
  {
    CurrentTaskAssociationImpl currentTaskAssociation = new CurrentTaskAssociationImpl();
    return currentTaskAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CoveredTasksAssociation createCoveredTasksAssociation()
  {
    CoveredTasksAssociationImpl coveredTasksAssociation = new CoveredTasksAssociationImpl();
    return coveredTasksAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TodoTasksAssociation createTodoTasksAssociation()
  {
    TodoTasksAssociationImpl todoTasksAssociation = new TodoTasksAssociationImpl();
    return todoTasksAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FinishedTasksAssociation createFinishedTasksAssociation()
  {
    FinishedTasksAssociationImpl finishedTasksAssociation = new FinishedTasksAssociationImpl();
    return finishedTasksAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PerformingActionAssociation createPerformingActionAssociation()
  {
    PerformingActionAssociationImpl performingActionAssociation = new PerformingActionAssociationImpl();
    return performingActionAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InAssociation createInAssociation()
  {
    InAssociationImpl inAssociation = new InAssociationImpl();
    return inAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CurrentPositionAssociation createCurrentPositionAssociation()
  {
    CurrentPositionAssociationImpl currentPositionAssociation = new CurrentPositionAssociationImpl();
    return currentPositionAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public HomeAssociation createHomeAssociation()
  {
    HomeAssociationImpl homeAssociation = new HomeAssociationImpl();
    return homeAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TaskAreaAssociation createTaskAreaAssociation()
  {
    TaskAreaAssociationImpl taskAreaAssociation = new TaskAreaAssociationImpl();
    return taskAreaAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public CoveredPointsAssociation createCoveredPointsAssociation()
  {
    CoveredPointsAssociationImpl coveredPointsAssociation = new CoveredPointsAssociationImpl();
    return coveredPointsAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TodoPointsAssociation createTodoPointsAssociation()
  {
    TodoPointsAssociationImpl todoPointsAssociation = new TodoPointsAssociationImpl();
    return todoPointsAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FinishedPointsAssociation createFinishedPointsAssociation()
  {
    FinishedPointsAssociationImpl finishedPointsAssociation = new FinishedPointsAssociationImpl();
    return finishedPointsAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public PointsAssociation createPointsAssociation()
  {
    PointsAssociationImpl pointsAssociation = new PointsAssociationImpl();
    return pointsAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public InitialPositionAssociation createInitialPositionAssociation()
  {
    InitialPositionAssociationImpl initialPositionAssociation = new InitialPositionAssociationImpl();
    return initialPositionAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReferenceAssociation createReferenceAssociation()
  {
    ReferenceAssociationImpl referenceAssociation = new ReferenceAssociationImpl();
    return referenceAssociation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public MissionSpecificationPackage getMissionSpecificationPackage()
  {
    return (MissionSpecificationPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static MissionSpecificationPackage getPackage()
  {
    return MissionSpecificationPackage.eINSTANCE;
  }

} //MissionSpecificationFactoryImpl
