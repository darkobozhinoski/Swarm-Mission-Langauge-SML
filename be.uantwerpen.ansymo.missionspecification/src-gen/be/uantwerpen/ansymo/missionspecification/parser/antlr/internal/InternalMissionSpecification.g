/*
 * generated by Xtext 2.10.0
 */
grammar InternalMissionSpecification;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package be.uantwerpen.ansymo.missionspecification.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package be.uantwerpen.ansymo.missionspecification.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import be.uantwerpen.ansymo.missionspecification.services.MissionSpecificationGrammarAccess;

}

@parser::members {

 	private MissionSpecificationGrammarAccess grammarAccess;

    public InternalMissionSpecificationParser(TokenStream input, MissionSpecificationGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "MissionSpecification";
   	}

   	@Override
   	protected MissionSpecificationGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleMissionSpecification
entryRuleMissionSpecification returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMissionSpecificationRule()); }
	iv_ruleMissionSpecification=ruleMissionSpecification
	{ $current=$iv_ruleMissionSpecification.current; }
	EOF;

// Rule MissionSpecification
ruleMissionSpecification returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMissionSpecificationAccess().getPropertiesPropertyParserRuleCall_0());
			}
			lv_properties_0_0=ruleProperty
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMissionSpecificationRule());
				}
				add(
					$current,
					"properties",
					lv_properties_0_0,
					"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Property");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getScopeScopeParserRuleCall_0_0());
				}
				lv_scope_0_0=ruleScope
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"scope",
						lv_scope_0_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Scope");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=','
		{
			newLeafNode(otherlv_1, grammarAccess.getPropertyAccess().getCommaKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPropertyAccess().getPatternPatternParserRuleCall_2_0());
				}
				lv_pattern_2_0=rulePattern
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPropertyRule());
					}
					set(
						$current,
						"pattern",
						lv_pattern_2_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Pattern");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='.'
			{
				newLeafNode(otherlv_3, grammarAccess.getPropertyAccess().getFullStopKeyword_3());
			}
		)?
	)
;

// Entry rule entryRuleScope
entryRuleScope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getScopeRule()); }
	iv_ruleScope=ruleScope
	{ $current=$iv_ruleScope.current; }
	EOF;

// Rule Scope
ruleScope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getScopeAccess().getGlobalScopeAction_0_0(),
						$current);
				}
			)
			otherlv_1='Globally'
			{
				newLeafNode(otherlv_1, grammarAccess.getScopeAccess().getGloballyKeyword_0_1());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getScopeAccess().getBeforeScopeAction_1_0(),
						$current);
				}
			)
			otherlv_3='Before'
			{
				newLeafNode(otherlv_3, grammarAccess.getScopeAccess().getBeforeKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_1_2_0());
					}
					lv_r_4_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopeRule());
						}
						set(
							$current,
							"r",
							lv_r_4_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getScopeAccess().getAfterScopeAction_2_0(),
						$current);
				}
			)
			otherlv_6='After'
			{
				newLeafNode(otherlv_6, grammarAccess.getScopeAccess().getAfterKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_2_2_0());
					}
					lv_q_7_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopeRule());
						}
						set(
							$current,
							"q",
							lv_q_7_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getScopeAccess().getBetweenScopeAction_3_0(),
						$current);
				}
			)
			otherlv_9='Between'
			{
				newLeafNode(otherlv_9, grammarAccess.getScopeAccess().getBetweenKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_3_2_0());
					}
					lv_q_10_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopeRule());
						}
						set(
							$current,
							"q",
							lv_q_10_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11=','
			{
				newLeafNode(otherlv_11, grammarAccess.getScopeAccess().getCommaKeyword_3_3());
			}
			otherlv_12='and'
			{
				newLeafNode(otherlv_12, grammarAccess.getScopeAccess().getAndKeyword_3_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_3_5_0());
					}
					lv_r_13_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopeRule());
						}
						set(
							$current,
							"r",
							lv_r_13_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getScopeAccess().getAfterUntilScopeAction_4_0(),
						$current);
				}
			)
			otherlv_15='After'
			{
				newLeafNode(otherlv_15, grammarAccess.getScopeAccess().getAfterKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopeAccess().getQPropositionParserRuleCall_4_2_0());
					}
					lv_q_16_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopeRule());
						}
						set(
							$current,
							"q",
							lv_q_16_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_17=','
			{
				newLeafNode(otherlv_17, grammarAccess.getScopeAccess().getCommaKeyword_4_3());
			}
			otherlv_18='until'
			{
				newLeafNode(otherlv_18, grammarAccess.getScopeAccess().getUntilKeyword_4_4());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getScopeAccess().getRPropositionParserRuleCall_4_5_0());
					}
					lv_r_19_0=ruleProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getScopeRule());
						}
						set(
							$current,
							"r",
							lv_r_19_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRulePattern
entryRulePattern returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternRule()); }
	iv_rulePattern=rulePattern
	{ $current=$iv_rulePattern.current; }
	EOF;

// Rule Pattern
rulePattern returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPatternAccess().getOccurenceParserRuleCall_0());
		}
		this_Occurence_0=ruleOccurence
		{
			$current = $this_Occurence_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPatternAccess().getOrderParserRuleCall_1());
		}
		this_Order_1=ruleOrder
		{
			$current = $this_Order_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOccurence
entryRuleOccurence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOccurenceRule()); }
	iv_ruleOccurence=ruleOccurence
	{ $current=$iv_ruleOccurence.current; }
	EOF;

// Rule Occurence
ruleOccurence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOccurenceAccess().getUniversalityParserRuleCall_0());
		}
		this_Universality_0=ruleUniversality
		{
			$current = $this_Universality_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOccurenceAccess().getAbsenceParserRuleCall_1());
		}
		this_Absence_1=ruleAbsence
		{
			$current = $this_Absence_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOccurenceAccess().getExistenceParserRuleCall_2());
		}
		this_Existence_2=ruleExistence
		{
			$current = $this_Existence_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOccurenceAccess().getBoundedExistenceParserRuleCall_3());
		}
		this_BoundedExistence_3=ruleBoundedExistence
		{
			$current = $this_BoundedExistence_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleUniversality
entryRuleUniversality returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUniversalityRule()); }
	iv_ruleUniversality=ruleUniversality
	{ $current=$iv_ruleUniversality.current; }
	EOF;

// Rule Universality
ruleUniversality returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='it'
		{
			newLeafNode(otherlv_0, grammarAccess.getUniversalityAccess().getItKeyword_0());
		}
		otherlv_1='is'
		{
			newLeafNode(otherlv_1, grammarAccess.getUniversalityAccess().getIsKeyword_1());
		}
		otherlv_2='always'
		{
			newLeafNode(otherlv_2, grammarAccess.getUniversalityAccess().getAlwaysKeyword_2());
		}
		otherlv_3='the'
		{
			newLeafNode(otherlv_3, grammarAccess.getUniversalityAccess().getTheKeyword_3());
		}
		otherlv_4='case'
		{
			newLeafNode(otherlv_4, grammarAccess.getUniversalityAccess().getCaseKeyword_4());
		}
		otherlv_5='that'
		{
			newLeafNode(otherlv_5, grammarAccess.getUniversalityAccess().getThatKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUniversalityAccess().getPPropositionParserRuleCall_6_0());
				}
				lv_p_6_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUniversalityRule());
					}
					set(
						$current,
						"p",
						lv_p_6_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='holds'
			{
				newLeafNode(otherlv_7, grammarAccess.getUniversalityAccess().getHoldsKeyword_7());
			}
		)?
	)
;

// Entry rule entryRuleAbsence
entryRuleAbsence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAbsenceRule()); }
	iv_ruleAbsence=ruleAbsence
	{ $current=$iv_ruleAbsence.current; }
	EOF;

// Rule Absence
ruleAbsence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='it'
		{
			newLeafNode(otherlv_0, grammarAccess.getAbsenceAccess().getItKeyword_0());
		}
		otherlv_1='is'
		{
			newLeafNode(otherlv_1, grammarAccess.getAbsenceAccess().getIsKeyword_1());
		}
		otherlv_2='never'
		{
			newLeafNode(otherlv_2, grammarAccess.getAbsenceAccess().getNeverKeyword_2());
		}
		otherlv_3='the'
		{
			newLeafNode(otherlv_3, grammarAccess.getAbsenceAccess().getTheKeyword_3());
		}
		otherlv_4='case'
		{
			newLeafNode(otherlv_4, grammarAccess.getAbsenceAccess().getCaseKeyword_4());
		}
		otherlv_5='that'
		{
			newLeafNode(otherlv_5, grammarAccess.getAbsenceAccess().getThatKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAbsenceAccess().getPPropositionParserRuleCall_6_0());
				}
				lv_p_6_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAbsenceRule());
					}
					set(
						$current,
						"p",
						lv_p_6_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='holds'
			{
				newLeafNode(otherlv_7, grammarAccess.getAbsenceAccess().getHoldsKeyword_7());
			}
		)?
	)
;

// Entry rule entryRuleExistence
entryRuleExistence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExistenceRule()); }
	iv_ruleExistence=ruleExistence
	{ $current=$iv_ruleExistence.current; }
	EOF;

// Rule Existence
ruleExistence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getExistenceAccess().getPPropositionParserRuleCall_0_0());
				}
				lv_p_0_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExistenceRule());
					}
					set(
						$current,
						"p",
						lv_p_0_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='holds'
			{
				newLeafNode(otherlv_1, grammarAccess.getExistenceAccess().getHoldsKeyword_1());
			}
		)?
		otherlv_2='eventually'
		{
			newLeafNode(otherlv_2, grammarAccess.getExistenceAccess().getEventuallyKeyword_2());
		}
	)
;

// Entry rule entryRuleBoundedExistence
entryRuleBoundedExistence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoundedExistenceRule()); }
	iv_ruleBoundedExistence=ruleBoundedExistence
	{ $current=$iv_ruleBoundedExistence.current; }
	EOF;

// Rule BoundedExistence
ruleBoundedExistence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getBoundedExistenceAccess().getPPropositionParserRuleCall_0_0());
				}
				lv_p_0_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoundedExistenceRule());
					}
					set(
						$current,
						"p",
						lv_p_0_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='holds'
			{
				newLeafNode(otherlv_1, grammarAccess.getBoundedExistenceAccess().getHoldsKeyword_1());
			}
		)?
		otherlv_2='at'
		{
			newLeafNode(otherlv_2, grammarAccess.getBoundedExistenceAccess().getAtKeyword_2());
		}
		otherlv_3='most'
		{
			newLeafNode(otherlv_3, grammarAccess.getBoundedExistenceAccess().getMostKeyword_3());
		}
		(
			(
				lv_n_4_0=RULE_INT
				{
					newLeafNode(lv_n_4_0, grammarAccess.getBoundedExistenceAccess().getNINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoundedExistenceRule());
					}
					setWithLastConsumed(
						$current,
						"n",
						lv_n_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_5='times'
		{
			newLeafNode(otherlv_5, grammarAccess.getBoundedExistenceAccess().getTimesKeyword_5());
		}
	)
;

// Entry rule entryRuleOrder
entryRuleOrder returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrderRule()); }
	iv_ruleOrder=ruleOrder
	{ $current=$iv_ruleOrder.current; }
	EOF;

// Rule Order
ruleOrder returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrderAccess().getPrecedenceParserRuleCall_0());
		}
		this_Precedence_0=rulePrecedence
		{
			$current = $this_Precedence_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOrderAccess().getResponseParserRuleCall_1());
		}
		this_Response_1=ruleResponse
		{
			$current = $this_Response_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePrecedence
entryRulePrecedence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrecedenceRule()); }
	iv_rulePrecedence=rulePrecedence
	{ $current=$iv_rulePrecedence.current; }
	EOF;

// Rule Precedence
rulePrecedence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrecedenceAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrecedenceAccess().getPPropositionParserRuleCall_1_0());
				}
				lv_p_1_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrecedenceRule());
					}
					set(
						$current,
						"p",
						lv_p_1_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='holds'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrecedenceAccess().getHoldsKeyword_2());
			}
		)?
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getPrecedenceAccess().getCommaKeyword_3());
		}
		otherlv_4='then'
		{
			newLeafNode(otherlv_4, grammarAccess.getPrecedenceAccess().getThenKeyword_4());
		}
		otherlv_5='it'
		{
			newLeafNode(otherlv_5, grammarAccess.getPrecedenceAccess().getItKeyword_5());
		}
		otherlv_6='must'
		{
			newLeafNode(otherlv_6, grammarAccess.getPrecedenceAccess().getMustKeyword_6());
		}
		otherlv_7='have'
		{
			newLeafNode(otherlv_7, grammarAccess.getPrecedenceAccess().getHaveKeyword_7());
		}
		otherlv_8='been'
		{
			newLeafNode(otherlv_8, grammarAccess.getPrecedenceAccess().getBeenKeyword_8());
		}
		otherlv_9='the'
		{
			newLeafNode(otherlv_9, grammarAccess.getPrecedenceAccess().getTheKeyword_9());
		}
		otherlv_10='case'
		{
			newLeafNode(otherlv_10, grammarAccess.getPrecedenceAccess().getCaseKeyword_10());
		}
		otherlv_11='that'
		{
			newLeafNode(otherlv_11, grammarAccess.getPrecedenceAccess().getThatKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrecedenceAccess().getSPropositionParserRuleCall_12_0());
				}
				lv_s_12_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrecedenceRule());
					}
					set(
						$current,
						"s",
						lv_s_12_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_13='has'
			{
				newLeafNode(otherlv_13, grammarAccess.getPrecedenceAccess().getHasKeyword_13_0());
			}
			otherlv_14='occurred'
			{
				newLeafNode(otherlv_14, grammarAccess.getPrecedenceAccess().getOccurredKeyword_13_1());
			}
		)?
		otherlv_15='beforehand'
		{
			newLeafNode(otherlv_15, grammarAccess.getPrecedenceAccess().getBeforehandKeyword_14());
		}
	)
;

// Entry rule entryRuleResponse
entryRuleResponse returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResponseRule()); }
	iv_ruleResponse=ruleResponse
	{ $current=$iv_ruleResponse.current; }
	EOF;

// Rule Response
ruleResponse returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getResponseAccess().getIfKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseAccess().getPPropositionParserRuleCall_1_0());
				}
				lv_p_1_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseRule());
					}
					set(
						$current,
						"p",
						lv_p_1_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='has'
			{
				newLeafNode(otherlv_2, grammarAccess.getResponseAccess().getHasKeyword_2_0());
			}
			otherlv_3='occurred'
			{
				newLeafNode(otherlv_3, grammarAccess.getResponseAccess().getOccurredKeyword_2_1());
			}
		)?
		otherlv_4=','
		{
			newLeafNode(otherlv_4, grammarAccess.getResponseAccess().getCommaKeyword_3());
		}
		otherlv_5='then'
		{
			newLeafNode(otherlv_5, grammarAccess.getResponseAccess().getThenKeyword_4());
		}
		otherlv_6='in'
		{
			newLeafNode(otherlv_6, grammarAccess.getResponseAccess().getInKeyword_5());
		}
		otherlv_7='response'
		{
			newLeafNode(otherlv_7, grammarAccess.getResponseAccess().getResponseKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getResponseAccess().getSPropositionParserRuleCall_7_0());
				}
				lv_s_8_0=ruleProposition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getResponseRule());
					}
					set(
						$current,
						"s",
						lv_s_8_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Proposition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_9='eventually'
			{
				newLeafNode(otherlv_9, grammarAccess.getResponseAccess().getEventuallyKeyword_8_0());
			}
			otherlv_10='holds'
			{
				newLeafNode(otherlv_10, grammarAccess.getResponseAccess().getHoldsKeyword_8_1());
			}
		)?
	)
;

// Entry rule entryRuleProposition
entryRuleProposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropositionRule()); }
	iv_ruleProposition=ruleProposition
	{ $current=$iv_ruleProposition.current; }
	EOF;

// Rule Proposition
ruleProposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getPropositionAccess().getMockPropositionAction_0_0(),
						$current);
				}
			)
			otherlv_1='todo'
			{
				newLeafNode(otherlv_1, grammarAccess.getPropositionAccess().getTodoKeyword_0_1());
			}
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPropositionAccess().getPropsAtomicPropositionParserRuleCall_1_0_0());
					}
					lv_props_2_0=ruleAtomicProposition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPropositionRule());
						}
						add(
							$current,
							"props",
							lv_props_2_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.AtomicProposition");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3='and'
				{
					newLeafNode(otherlv_3, grammarAccess.getPropositionAccess().getAndKeyword_1_1_0());
				}
				otherlv_4='also'
				{
					newLeafNode(otherlv_4, grammarAccess.getPropositionAccess().getAlsoKeyword_1_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPropositionAccess().getPropsAtomicPropositionParserRuleCall_1_1_2_0());
						}
						lv_props_5_0=ruleAtomicProposition
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPropositionRule());
							}
							add(
								$current,
								"props",
								lv_props_5_0,
								"be.uantwerpen.ansymo.missionspecification.MissionSpecification.AtomicProposition");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
	)
;

// Entry rule entryRuleAtomicProposition
entryRuleAtomicProposition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtomicPropositionRule()); }
	iv_ruleAtomicProposition=ruleAtomicProposition
	{ $current=$iv_ruleAtomicProposition.current; }
	EOF;

// Rule AtomicProposition
ruleAtomicProposition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAtomicPropositionAccess().getInstInstanceParserRuleCall_0_0());
				}
				lv_inst_0_0=ruleInstance
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtomicPropositionRule());
					}
					set(
						$current,
						"inst",
						lv_inst_0_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Instance");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='with'
			{
				newLeafNode(otherlv_1, grammarAccess.getAtomicPropositionAccess().getWithKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicPropositionAccess().getCondBooleanExpressionParserRuleCall_1_1_0());
					}
					lv_cond_2_0=ruleBooleanExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicPropositionRule());
						}
						add(
							$current,
							"cond",
							lv_cond_2_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.BooleanExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3='and'
				{
					newLeafNode(otherlv_3, grammarAccess.getAtomicPropositionAccess().getAndKeyword_1_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicPropositionAccess().getCondBooleanExpressionParserRuleCall_1_2_1_0());
						}
						lv_cond_4_0=ruleBooleanExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicPropositionRule());
							}
							add(
								$current,
								"cond",
								lv_cond_4_0,
								"be.uantwerpen.ansymo.missionspecification.MissionSpecification.BooleanExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicPropositionAccess().getAssocAssociationParserRuleCall_2_0_0());
					}
					lv_assoc_5_0=ruleAssociation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicPropositionRule());
						}
						set(
							$current,
							"assoc",
							lv_assoc_5_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Association");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAtomicPropositionAccess().getInst2InstanceParserRuleCall_2_1_0());
					}
					lv_inst2_6_0=ruleInstance
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAtomicPropositionRule());
						}
						set(
							$current,
							"inst2",
							lv_inst2_6_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Instance");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7='with'
				{
					newLeafNode(otherlv_7, grammarAccess.getAtomicPropositionAccess().getWithKeyword_2_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getAtomicPropositionAccess().getCond2BooleanExpressionParserRuleCall_2_2_1_0());
						}
						lv_cond2_8_0=ruleBooleanExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getAtomicPropositionRule());
							}
							add(
								$current,
								"cond2",
								lv_cond2_8_0,
								"be.uantwerpen.ansymo.missionspecification.MissionSpecification.BooleanExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_9='and'
					{
						newLeafNode(otherlv_9, grammarAccess.getAtomicPropositionAccess().getAndKeyword_2_2_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getAtomicPropositionAccess().getCond2BooleanExpressionParserRuleCall_2_2_2_1_0());
							}
							lv_cond2_10_0=ruleBooleanExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getAtomicPropositionRule());
								}
								add(
									$current,
									"cond2",
									lv_cond2_10_0,
									"be.uantwerpen.ansymo.missionspecification.MissionSpecification.BooleanExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
		)?
	)
;

// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBooleanExpressionRule()); }
	iv_ruleBooleanExpression=ruleBooleanExpression
	{ $current=$iv_ruleBooleanExpression.current; }
	EOF;

// Rule BooleanExpression
ruleBooleanExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getBinaryExpressionParserRuleCall_0());
		}
		this_BinaryExpression_0=ruleBinaryExpression
		{
			$current = $this_BinaryExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getBooleanExpressionAccess().getUnaryExpressionParserRuleCall_1());
		}
		this_UnaryExpression_1=ruleUnaryExpression
		{
			$current = $this_UnaryExpression_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBooleanExpressionAccess().getConditionAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBooleanExpressionAccess().getAttrAttributeParserRuleCall_2_1_0());
					}
					lv_attr_3_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBooleanExpressionRule());
						}
						set(
							$current,
							"attr",
							lv_attr_3_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleBinaryExpression
entryRuleBinaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBinaryExpressionRule()); }
	iv_ruleBinaryExpression=ruleBinaryExpression
	{ $current=$iv_ruleBinaryExpression.current; }
	EOF;

// Rule BinaryExpression
ruleBinaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryExpressionAccess().getEqualsConditionAction_0_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_0_1_0());
					}
					lv_attr_1_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"attr",
							lv_attr_1_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_2='as'
			{
				newLeafNode(otherlv_2, grammarAccess.getBinaryExpressionAccess().getAsKeyword_0_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_0_3_0());
					}
					lv_val_3_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"val",
							lv_val_3_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryExpressionAccess().getLessThanConditionAction_1_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_1_1_0());
					}
					lv_attr_5_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"attr",
							lv_attr_5_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_6='less'
			{
				newLeafNode(otherlv_6, grammarAccess.getBinaryExpressionAccess().getLessKeyword_1_2());
			}
			otherlv_7='than'
			{
				newLeafNode(otherlv_7, grammarAccess.getBinaryExpressionAccess().getThanKeyword_1_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_1_4_0());
					}
					lv_val_8_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"val",
							lv_val_8_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getBinaryExpressionAccess().getGreaterThanConditionAction_2_0(),
						$current);
				}
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getAttrAttributeParserRuleCall_2_1_0());
					}
					lv_attr_10_0=ruleAttribute
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"attr",
							lv_attr_10_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Attribute");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_11='greater'
			{
				newLeafNode(otherlv_11, grammarAccess.getBinaryExpressionAccess().getGreaterKeyword_2_2());
			}
			otherlv_12='than'
			{
				newLeafNode(otherlv_12, grammarAccess.getBinaryExpressionAccess().getThanKeyword_2_3());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBinaryExpressionAccess().getValLiteralParserRuleCall_2_4_0());
					}
					lv_val_13_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBinaryExpressionRule());
						}
						set(
							$current,
							"val",
							lv_val_13_0,
							"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); }
	iv_ruleUnaryExpression=ruleUnaryExpression
	{ $current=$iv_ruleUnaryExpression.current; }
	EOF;

// Rule UnaryExpression
ruleUnaryExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUnaryExpressionAccess().getNotConditionAction_0(),
					$current);
			}
		)
		otherlv_1='not'
		{
			newLeafNode(otherlv_1, grammarAccess.getUnaryExpressionAccess().getNotKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getUnaryExpressionAccess().getAttrAttributeParserRuleCall_2_0());
				}
				lv_attr_2_0=ruleAttribute
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getUnaryExpressionRule());
					}
					set(
						$current,
						"attr",
						lv_attr_2_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Attribute");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInstance
entryRuleInstance returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceRule()); }
	iv_ruleInstance=ruleInstance
	{ $current=$iv_ruleInstance.current; }
	EOF;

// Rule Instance
ruleInstance returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getInstanceAccess().getInstanceRefParserRuleCall_0());
		}
		this_InstanceRef_0=ruleInstanceRef
		{
			$current = $this_InstanceRef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getInstanceAccess().getInstanceDeclParserRuleCall_1());
		}
		this_InstanceDecl_1=ruleInstanceDecl
		{
			$current = $this_InstanceDecl_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleInstanceDecl
entryRuleInstanceDecl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceDeclRule()); }
	iv_ruleInstanceDecl=ruleInstanceDecl
	{ $current=$iv_ruleInstanceDecl.current; }
	EOF;

// Rule InstanceDecl
ruleInstanceDecl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='a'
			{
				newLeafNode(otherlv_0, grammarAccess.getInstanceDeclAccess().getAKeyword_0_0());
			}
			    |
			otherlv_1='an'
			{
				newLeafNode(otherlv_1, grammarAccess.getInstanceDeclAccess().getAnKeyword_0_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getInstanceDeclAccess().getTypeTypeParserRuleCall_1_0());
				}
				lv_type_2_0=ruleType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInstanceDeclRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"be.uantwerpen.ansymo.missionspecification.MissionSpecification.Type");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getInstanceDeclAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInstanceDeclRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
	)
;

// Entry rule entryRuleInstanceRef
entryRuleInstanceRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInstanceRefRule()); }
	iv_ruleInstanceRef=ruleInstanceRef
	{ $current=$iv_ruleInstanceRef.current; }
	EOF;

// Rule InstanceRef
ruleInstanceRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getInstanceRefRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getInstanceRefAccess().getRefInstanceDeclCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleAssociation
entryRuleAssociation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAssociationRule()); }
	iv_ruleAssociation=ruleAssociation
	{ $current=$iv_ruleAssociation.current; }
	EOF;

// Rule Association
ruleAssociation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getTasksAssociationAction_0_0(),
						$current);
				}
			)
			otherlv_1='that'
			{
				newLeafNode(otherlv_1, grammarAccess.getAssociationAccess().getThatKeyword_0_1());
			}
			otherlv_2='is'
			{
				newLeafNode(otherlv_2, grammarAccess.getAssociationAccess().getIsKeyword_0_2());
			}
			otherlv_3='a'
			{
				newLeafNode(otherlv_3, grammarAccess.getAssociationAccess().getAKeyword_0_3());
			}
			otherlv_4='task'
			{
				newLeafNode(otherlv_4, grammarAccess.getAssociationAccess().getTaskKeyword_0_4());
			}
			otherlv_5='of'
			{
				newLeafNode(otherlv_5, grammarAccess.getAssociationAccess().getOfKeyword_0_5());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getTeamAssociationAction_1_0(),
						$current);
				}
			)
			otherlv_7='that'
			{
				newLeafNode(otherlv_7, grammarAccess.getAssociationAccess().getThatKeyword_1_1());
			}
			otherlv_8='is'
			{
				newLeafNode(otherlv_8, grammarAccess.getAssociationAccess().getIsKeyword_1_2());
			}
			otherlv_9='a'
			{
				newLeafNode(otherlv_9, grammarAccess.getAssociationAccess().getAKeyword_1_3());
			}
			otherlv_10='team'
			{
				newLeafNode(otherlv_10, grammarAccess.getAssociationAccess().getTeamKeyword_1_4());
			}
			otherlv_11='of'
			{
				newLeafNode(otherlv_11, grammarAccess.getAssociationAccess().getOfKeyword_1_5());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getRobotsAssociationAction_2_0(),
						$current);
				}
			)
			otherlv_13='that'
			{
				newLeafNode(otherlv_13, grammarAccess.getAssociationAccess().getThatKeyword_2_1());
			}
			otherlv_14='is'
			{
				newLeafNode(otherlv_14, grammarAccess.getAssociationAccess().getIsKeyword_2_2());
			}
			otherlv_15='in'
			{
				newLeafNode(otherlv_15, grammarAccess.getAssociationAccess().getInKeyword_2_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getCurrentTaskAssociationAction_3_0(),
						$current);
				}
			)
			(
				otherlv_17='currently'
				{
					newLeafNode(otherlv_17, grammarAccess.getAssociationAccess().getCurrentlyKeyword_3_1());
				}
			)?
			otherlv_18='doing'
			{
				newLeafNode(otherlv_18, grammarAccess.getAssociationAccess().getDoingKeyword_3_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getCoveredTasksAssociationAction_4_0(),
						$current);
				}
			)
			otherlv_20='that'
			{
				newLeafNode(otherlv_20, grammarAccess.getAssociationAccess().getThatKeyword_4_1());
			}
			otherlv_21='has'
			{
				newLeafNode(otherlv_21, grammarAccess.getAssociationAccess().getHasKeyword_4_2());
			}
			otherlv_22='scheduled'
			{
				newLeafNode(otherlv_22, grammarAccess.getAssociationAccess().getScheduledKeyword_4_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getTodoTasksAssociationAction_5_0(),
						$current);
				}
			)
			otherlv_24='that'
			{
				newLeafNode(otherlv_24, grammarAccess.getAssociationAccess().getThatKeyword_5_1());
			}
			otherlv_25='has'
			{
				newLeafNode(otherlv_25, grammarAccess.getAssociationAccess().getHasKeyword_5_2());
			}
			otherlv_26='planned'
			{
				newLeafNode(otherlv_26, grammarAccess.getAssociationAccess().getPlannedKeyword_5_3());
			}
			otherlv_27='in'
			{
				newLeafNode(otherlv_27, grammarAccess.getAssociationAccess().getInKeyword_5_4());
			}
			otherlv_28='the'
			{
				newLeafNode(otherlv_28, grammarAccess.getAssociationAccess().getTheKeyword_5_5());
			}
			otherlv_29='future'
			{
				newLeafNode(otherlv_29, grammarAccess.getAssociationAccess().getFutureKeyword_5_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getFinishedTasksAssociationAction_6_0(),
						$current);
				}
			)
			otherlv_31='that'
			{
				newLeafNode(otherlv_31, grammarAccess.getAssociationAccess().getThatKeyword_6_1());
			}
			otherlv_32='has'
			{
				newLeafNode(otherlv_32, grammarAccess.getAssociationAccess().getHasKeyword_6_2());
			}
			otherlv_33='finished'
			{
				newLeafNode(otherlv_33, grammarAccess.getAssociationAccess().getFinishedKeyword_6_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getPerformingActionAssociationAction_7_0(),
						$current);
				}
			)
			(
				otherlv_35='currently'
				{
					newLeafNode(otherlv_35, grammarAccess.getAssociationAccess().getCurrentlyKeyword_7_1());
				}
			)?
			otherlv_36='performing'
			{
				newLeafNode(otherlv_36, grammarAccess.getAssociationAccess().getPerformingKeyword_7_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getInAssociationAction_8_0(),
						$current);
				}
			)
			(
				otherlv_38='currently'
				{
					newLeafNode(otherlv_38, grammarAccess.getAssociationAccess().getCurrentlyKeyword_8_1());
				}
			)?
			otherlv_39='in'
			{
				newLeafNode(otherlv_39, grammarAccess.getAssociationAccess().getInKeyword_8_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getCurrentPositionAssociationAction_9_0(),
						$current);
				}
			)
			(
				otherlv_41='currently'
				{
					newLeafNode(otherlv_41, grammarAccess.getAssociationAccess().getCurrentlyKeyword_9_1());
				}
			)?
			otherlv_42='on'
			{
				newLeafNode(otherlv_42, grammarAccess.getAssociationAccess().getOnKeyword_9_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getHomeAssociationAction_10_0(),
						$current);
				}
			)
			otherlv_44='with'
			{
				newLeafNode(otherlv_44, grammarAccess.getAssociationAccess().getWithKeyword_10_1());
			}
			otherlv_45='as'
			{
				newLeafNode(otherlv_45, grammarAccess.getAssociationAccess().getAsKeyword_10_2());
			}
			otherlv_46='home'
			{
				newLeafNode(otherlv_46, grammarAccess.getAssociationAccess().getHomeKeyword_10_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getTaskAreaAssociationAction_11_0(),
						$current);
				}
			)
			otherlv_48='with'
			{
				newLeafNode(otherlv_48, grammarAccess.getAssociationAccess().getWithKeyword_11_1());
			}
			otherlv_49='task'
			{
				newLeafNode(otherlv_49, grammarAccess.getAssociationAccess().getTaskKeyword_11_2());
			}
			otherlv_50='area'
			{
				newLeafNode(otherlv_50, grammarAccess.getAssociationAccess().getAreaKeyword_11_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getCoveredPointsAssociationAction_12_0(),
						$current);
				}
			)
			otherlv_52='which'
			{
				newLeafNode(otherlv_52, grammarAccess.getAssociationAccess().getWhichKeyword_12_1());
			}
			otherlv_53='visits'
			{
				newLeafNode(otherlv_53, grammarAccess.getAssociationAccess().getVisitsKeyword_12_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getTodoPointsAssociationAction_13_0(),
						$current);
				}
			)
			otherlv_55='which'
			{
				newLeafNode(otherlv_55, grammarAccess.getAssociationAccess().getWhichKeyword_13_1());
			}
			otherlv_56='will'
			{
				newLeafNode(otherlv_56, grammarAccess.getAssociationAccess().getWillKeyword_13_2());
			}
			otherlv_57='visit'
			{
				newLeafNode(otherlv_57, grammarAccess.getAssociationAccess().getVisitKeyword_13_3());
			}
			otherlv_58='in'
			{
				newLeafNode(otherlv_58, grammarAccess.getAssociationAccess().getInKeyword_13_4());
			}
			otherlv_59='the'
			{
				newLeafNode(otherlv_59, grammarAccess.getAssociationAccess().getTheKeyword_13_5());
			}
			otherlv_60='future'
			{
				newLeafNode(otherlv_60, grammarAccess.getAssociationAccess().getFutureKeyword_13_6());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getFinishedPointsAssociationAction_14_0(),
						$current);
				}
			)
			otherlv_62='which'
			{
				newLeafNode(otherlv_62, grammarAccess.getAssociationAccess().getWhichKeyword_14_1());
			}
			otherlv_63='has'
			{
				newLeafNode(otherlv_63, grammarAccess.getAssociationAccess().getHasKeyword_14_2());
			}
			otherlv_64='visited'
			{
				newLeafNode(otherlv_64, grammarAccess.getAssociationAccess().getVisitedKeyword_14_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getPointsAssociationAction_15_0(),
						$current);
				}
			)
			otherlv_66='with'
			{
				newLeafNode(otherlv_66, grammarAccess.getAssociationAccess().getWithKeyword_15_1());
			}
			otherlv_67='points'
			{
				newLeafNode(otherlv_67, grammarAccess.getAssociationAccess().getPointsKeyword_15_2());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getInitialPositionAssociationAction_16_0(),
						$current);
				}
			)
			otherlv_69='with'
			{
				newLeafNode(otherlv_69, grammarAccess.getAssociationAccess().getWithKeyword_16_1());
			}
			otherlv_70='initial'
			{
				newLeafNode(otherlv_70, grammarAccess.getAssociationAccess().getInitialKeyword_16_2());
			}
			otherlv_71='position'
			{
				newLeafNode(otherlv_71, grammarAccess.getAssociationAccess().getPositionKeyword_16_3());
			}
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getAssociationAccess().getReferenceAssociationAction_17_0(),
						$current);
				}
			)
			otherlv_73='which'
			{
				newLeafNode(otherlv_73, grammarAccess.getAssociationAccess().getWhichKeyword_17_1());
			}
			otherlv_74='references'
			{
				newLeafNode(otherlv_74, grammarAccess.getAssociationAccess().getReferencesKeyword_17_2());
			}
		)
	)
;

// Entry rule entryRuleType
entryRuleType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	iv_ruleType=ruleType
	{ $current=$iv_ruleType.current; }
	EOF;

// Rule Type
ruleType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTypeRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleAttribute
entryRuleAttribute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeRule()); }
	iv_ruleAttribute=ruleAttribute
	{ $current=$iv_ruleAttribute.current; }
	EOF;

// Rule Attribute
ruleAttribute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAttributeRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_0());
		}
		this_IntLiteral_0=ruleIntLiteral
		{
			$current = $this_IntLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getRealLiteralParserRuleCall_1());
		}
		this_RealLiteral_1=ruleRealLiteral
		{
			$current = $this_RealLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStringLiteralParserRuleCall_2());
		}
		this_StringLiteral_2=ruleStringLiteral
		{
			$current = $this_StringLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_3());
		}
		this_BoolLiteral_3=ruleBoolLiteral
		{
			$current = $this_BoolLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getIntLiteralAccess().getValueSignedIntParserRuleCall_0());
			}
			lv_value_0_0=ruleSignedInt
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getIntLiteralRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"be.uantwerpen.ansymo.missionspecification.MissionSpecification.SignedInt");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRealLiteral
entryRuleRealLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRealLiteralRule()); }
	iv_ruleRealLiteral=ruleRealLiteral
	{ $current=$iv_ruleRealLiteral.current; }
	EOF;

// Rule RealLiteral
ruleRealLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getRealLiteralAccess().getValueSignedRealParserRuleCall_0());
			}
			lv_value_0_0=ruleSignedReal
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getRealLiteralRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"be.uantwerpen.ansymo.missionspecification.MissionSpecification.SignedReal");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStringLiteral
entryRuleStringLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringLiteralRule()); }
	iv_ruleStringLiteral=ruleStringLiteral
	{ $current=$iv_ruleStringLiteral.current; }
	EOF;

// Rule StringLiteral
ruleStringLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_STRING
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStringLiteralAccess().getValueSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolLiteralRule()); }
	iv_ruleBoolLiteral=ruleBoolLiteral
	{ $current=$iv_ruleBoolLiteral.current; }
	EOF;

// Rule BoolLiteral
ruleBoolLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='true'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getBoolLiteralAccess().getValueTrueKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='false'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getBoolLiteralAccess().getValueFalseKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoolLiteralRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleSignedInt
entryRuleSignedInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSignedIntRule()); }
	iv_ruleSignedInt=ruleSignedInt
	{ $current=$iv_ruleSignedInt.current.getText(); }
	EOF;

// Rule SignedInt
ruleSignedInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getSignedIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleSignedReal
entryRuleSignedReal returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSignedRealRule()); }
	iv_ruleSignedReal=ruleSignedReal
	{ $current=$iv_ruleSignedReal.current.getText(); }
	EOF;

// Rule SignedReal
ruleSignedReal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_REAL_1=RULE_REAL
		{
			$current.merge(this_REAL_1);
		}
		{
			newLeafNode(this_REAL_1, grammarAccess.getSignedRealAccess().getREALTerminalRuleCall_1());
		}
	)
;

RULE_REAL : RULE_INT? '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
